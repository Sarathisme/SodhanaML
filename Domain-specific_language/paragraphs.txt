Adomain-specificlanguage(DSL)isacomputerlanguagespecializedtoaparticularapplicationdomain.Thisisincontrasttoageneral-purposelanguage(GPL),whichisbroadlyapplicableacrossdomains.ThereareawidevarietyofDSLs,rangingfromwidelyusedlanguagesforcommondomains,suchasHTMLforwebpages,downtolanguagesusedbyonlyoneorafewpiecesofsoftware,suchasMUSHsoftcode.DSLscanbefurthersubdividedbythekindoflanguage,andincludedomain-specificmarkuplanguages,domain-specificmodelinglanguages(moregenerally,specificationlanguages),anddomain-specificprogramminglanguages.Special-purposecomputerlanguageshavealwaysexistedinthecomputerage,buttheterm"domain-specificlanguage"hasbecomemorepopularduetotheriseofdomain-specificmodeling.SimplerDSLs,particularlyonesusedbyasingleapplication,aresometimesinformallycalledmini-languages.\nThelinebetweengeneral-purposelanguagesanddomain-specificlanguagesisnotalwayssharp,asalanguagemayhavespecializedfeaturesforaparticulardomainbutbeapplicablemorebroadly,orconverselymayinprinciplebecapableofbroadapplicationbutinpracticeusedprimarilyforaspecificdomain.Forexample,Perlwasoriginallydevelopedasatext-processingandgluelanguage,forthesamedomainasAWKandshellscripts,butwasmostlyusedasageneral-purposeprogramminglanguagelateron.Bycontrast,PostScriptisaTuringcompletelanguage,andinprinciplecanbeusedforanytask,butinpracticeisnarrowlyusedasapagedescriptionlanguage.\nThedesignanduseofappropriateDSLsisakeypartofdomainengineering,byusingalanguagesuitabletothedomainathand\xe2\x80\x93thismayconsistofusinganexistingDSLorGPL,ordevelopinganewDSL.Language-orientedprogrammingconsidersthecreationofspecial-purposelanguagesforexpressingproblemsasstandardpartoftheproblemsolvingprocess.Creatingadomain-specificlanguage(withsoftwaretosupportit),ratherthanreusinganexistinglanguage,canbeworthwhileifthelanguageallowsaparticulartypeofproblemorsolutiontobeexpressedmoreclearlythananexistinglanguagewouldallowandthetypeofprobleminquestionreappearssufficientlyoften.Pragmatically,aDSLmaybespecializedtoaparticularproblemdomain,aparticularproblemrepresentationtechnique,aparticularsolutiontechnique,orotheraspectofadomain.\nAdomain-specificlanguageiscreatedspecificallytosolveproblemsinaparticulardomainandisnotintendedtobeabletosolveproblemsoutsideit(althoughthatmaybetechnicallypossible).Incontrast,general-purposelanguagesarecreatedtosolveproblemsinmanydomains.Thedomaincanalsobeabusinessarea.Someexamplesofbusinessareasinclude:\nAdomain-specificlanguageissomewherebetweenatinyprogramminglanguageandascriptinglanguage,andisoftenusedinawayanalogoustoaprogramminglibrary.Theboundariesbetweentheseconceptsarequiteblurry,muchliketheboundarybetweenscriptinglanguagesandgeneral-purposelanguages.\nDomain-specificlanguagesarelanguages(oroften,declaredsyntaxesorgrammars)withveryspecificgoalsindesignandimplementation.Adomain-specificlanguagecanbeoneofavisualdiagramminglanguage,suchasthosecreatedbytheGenericEclipseModelingSystem,programmaticabstractions,suchastheEclipseModelingFramework,ortextuallanguages.Forinstance,thecommandlineutilitygrephasaregularexpressionsyntaxwhichmatchespatternsinlinesoftext.Thesedutilitydefinesasyntaxformatchingandreplacingregularexpressions.Often,thesetinylanguagescanbeusedtogetherinsideashelltoperformmorecomplexprogrammingtasks.\nThelinebetweendomain-specificlanguagesandscriptinglanguagesissomewhatblurred,butdomain-specificlanguagesoftenlacklow-levelfunctionsforfilesystemaccess,interprocesscontrol,andotherfunctionsthatcharacterizefull-featuredprogramminglanguages,scriptingorotherwise.Manydomain-specificlanguagesdonotcompiletobyte-codeorexecutablecode,buttovariouskindsofmediaobjects:GraphVizexportstoPostScript,GIF,JPEG,etc.,whereCsoundcompilestoaudiofiles,andaray-tracingdomain-specificlanguagelikePOVcompilestographicsfiles.AcomputerlanguagelikeSQLpresentsaninterestingcase:itcanbedeemedadomain-specificlanguagebecauseitisspecifictoaspecificdomain(inSQL\'scase,accessingandmanagingrelationaldatabases),andisoftencalledfromanotherapplication,butSQLhasmorekeywordsandfunctionsthanmanyscriptinglanguages,andisoftenthoughtofasalanguageinitsownright,perhapsbecauseoftheprevalenceofdatabasemanipulationinprogrammingandtheamountofmasteryrequiredtobeanexpertinthelanguage.\nFurtherblurringthisline,manydomain-specificlanguageshaveexposedAPIs,andcanbeaccessedfromotherprogramminglanguageswithoutbreakingtheflowofexecutionorcallingaseparateprocess,andcanthusoperateasprogramminglibraries.\nSomedomain-specificlanguagesexpandovertimetoincludefull-featuredprogrammingtools,whichfurthercomplicatesthequestionofwhetheralanguageisdomain-specificornot.AgoodexampleisthefunctionallanguageXSLT,specificallydesignedfortransformingoneXMLgraphintoanother,whichhasbeenextendedsinceitsinceptiontoallow(particularlyinits2.0version)forvariousformsoffilesysteminteraction,stringanddatemanipulation,anddatatyping.\nInmodel-drivenengineering,manyexamplesofdomain-specificlanguagesmaybefoundlikeOCL,alanguagefordecoratingmodelswithassertionsorQVT,adomain-specifictransformationlanguage.HoweverlanguageslikeUMLaretypicallygeneralpurposemodelinglanguages.\nTosummarize,ananalogymightbeuseful:aVeryLittleLanguageislikeaknife,whichcanbeusedinthousandsofdifferentways,fromcuttingfoodtocuttingdowntrees.Adomain-specificlanguageislikeanelectricdrill:itisapowerfultoolwithawidevarietyofuses,butaspecificcontext,namely,puttingholesinthings.AGeneralPurposeLanguageisacompleteworkbench,withavarietyoftoolsintendedforperformingavarietyoftasks.Domain-specificlanguagesshouldbeusedbyprogrammerswho,lookingattheircurrentworkbench,realizetheyneedabetterdrill,andfindthataparticulardomain-specificlanguageprovidesexactlythat.\nThereareseveralusagepatternsfordomain-specificlanguages:[1][2]\nManydomain-specificlanguagescanbeusedinmorethanoneway.[citationneeded]DSLcodeembeddedinahostlanguagemayhavespecialsyntaxsupport,suchasregexesinsed,AWK,PerlorJavaScript,ormaybepassedasstrings.\nAdoptingadomain-specificlanguageapproachtosoftwareengineeringinvolvesbothrisksandopportunities.Thewell-designeddomain-specificlanguagemanagestofindtheproperbalancebetweenthese.\nDomain-specificlanguageshaveimportantdesigngoalsthatcontrastwiththoseofgeneral-purposelanguages:\nInprogramming,idiomsaremethodsimposedbyprogrammerstohandlecommondevelopmenttasks,e.g.:\nGeneralpurposeprogramminglanguagesrarelysupportsuchidioms,butdomain-specificlanguagescandescribethem,e.g.:\nExamplesofdomain-specificlanguagesincludeHTML,Logoforpencil-likedrawing,VerilogandVHDLhardwaredescriptionlanguages,MATLABandGNUOctaveformatrixprogramming,Mathematica,MapleandMaximaforsymbolicmathematics,SpecificationandDescriptionLanguageforreactiveanddistributedsystems,spreadsheetformulasandmacros,SQLforrelationaldatabasequeries,YACCgrammarsforcreatingparsers,regularexpressionsforspecifyinglexers,theGenericEclipseModelingSystemforcreatingdiagramminglanguages,Csoundforsoundandmusicsynthesis,andtheinputlanguagesofGraphVizandGrGen,softwarepackagesusedforgraphlayoutandgraphrewriting.\nTheGMLscriptinglanguageusedbyGameMakerStudioisadomain-specificlanguagetargetedatnoviceprogrammerstoeasilybeabletolearnprogramming.WhilethelanguageservesasablendofmultiplelanguagesincludingDelphi,C++,andBASIC,thereisalackofstructures,datatypes,andotherfeaturesofafull-fledgedprogramminglanguage.Manyofthebuilt-infunctionsaresandboxedforthepurposeofeasyportability.Thelanguageprimarilyservestomakeiteasyforanyonetopickupthelanguageanddevelopagame.\nUnixshellscriptsgiveagoodexampleofadomain-specificlanguagefordata[3]organization.Theycanmanipulatedatainfilesoruserinputinmanydifferentways.Domainabstractionsandnotationsincludestreams(suchasstdinandstdout)andoperationsonstreams(suchasredirectionandpipe).Theseabstractionscombinetomakearobustlanguagetodescribetheflowandorganizationofdata.\nThelanguageconsistsofasimpleinterface(ascript)forrunningandcontrollingprocessesthatperformsmalltasks.Thesetasksrepresenttheidiomsoforganizingdataintoadesiredformatsuchastables,graphs,charts,etc.\nThesetasksconsistofsimplecontrol-flowandstringmanipulationmechanismsthatcoveralotofcommonusageslikesearchingandreplacingstringinfiles,orcountingoccurrencesofstrings(frequencycounting).\nEventhoughUnixscriptinglanguagesareTuringcomplete,theydifferfromgeneralpurposelanguages.[clarificationneeded]\nInpractice,scriptinglanguagesareusedtoweavetogethersmallUnixtoolssuchasgrep,ls,sortorwc.\nColdFusion\'sassociatedscriptinglanguageisanotherexampleofadomain-specificlanguagefordata-drivenwebsites.\nThisscriptinglanguageisusedtoweavetogetherlanguagesandservicessuchasJava,.NET,C++,SMS,email,emailservers,http,ftp,exchange,directoryservices,andfilesystemsforuseinwebsites.\nTheColdFusionMarkupLanguage(CFML)includesasetoftagsthatcanbeusedinColdFusionpagestointeractwithdata\nsources,manipulatedata,anddisplayoutput.CFMLtagsyntaxissimilartoHTMLelementsyntax.\nTheErlangOpenTelecomPlatformwasoriginallydesignedforuseinsideEricssonasadomain-specificlanguage.Thelanguageitselfoffersaplatformoflibrariestocreatefinitestatemachines,genericserversandeventmanagersthatquicklyallowanengineertodeployapplications,orsupportlibraries,thathavebeenshowninindustrybenchmarkstooutperformotherlanguagesintendedforamixedsetofdomains,suchasCandC++.Thelanguageisnowofficiallyopensourceandcanbedownloadedfromtheirwebsite.\nFilterMeisterisaprogrammingenvironment,withaprogramminglanguagethatisbasedonC,forthespecificpurposeofcreatingPhotoshop-compatibleimageprocessingfilterplug-ins;FilterMeisterrunsasaPhotoshopplug-initselfanditcanloadandexecutescriptsorcompileandexportthemasindependentplug-ins.\nAlthoughtheFilterMeisterlanguagereproducesasignificantportionoftheClanguageandfunctionlibrary,itcontainsonlythosefeatureswhichcanbeusedwithinthecontextofPhotoshopplug-insandaddsanumberofspecificfeaturesonlyusefulinthisspecificdomain.\nTheTemplatefeatureofMediaWikiisanembeddeddomain-specificlanguagewhosefundamentalpurposeistosupportthecreationofpagetemplatesandthetransclusion(inclusionbyreference)ofMediaWikipagesintootherMediaWikipages.\nTherehasbeenmuchinterestindomain-specificlanguagestoimprovetheproductivityandqualityofsoftwareengineering.Domain-specificlanguagecouldpossiblyprovidearobustsetoftoolsforefficientsoftwareengineering.Suchtoolsarebeginningtomaketheirwayintodevelopmentofcriticalsoftwaresystems.\nTheSoftwareCostReductionToolkit[4]isanexampleofthis.Thetoolkitisasuiteofutilitiesincludingaspecificationeditortocreatearequirementsspecification,adependencygraphbrowsertodisplayvariabledependencies,aconsistencycheckertocatchmissingcasesinwell-formedformulasinthespecification,amodelcheckerandatheoremprovertocheckprogrampropertiesagainstthespecification,andaninvariantgeneratorthatautomaticallyconstructsinvariantsbasedontherequirements.\nComplementinglanguage-orientedprogramming,aswellasallotherformsofdomain-specificlanguages,aretheclassofcompilerwritingtoolscalledmetacompilers.Ametacompilerisnotonlyusefulforgeneratingparsersandcodegeneratorsfordomain-specificlanguages,butametacompileritselfcompilesadomain-specificmetalanguagespecificallydesignedforthedomainofmetaprogramming.\nBesidesparsingdomain-specificlanguages,metacompilersareusefulforgeneratingawiderangeofsoftwareengineeringandanalysistools.Themeta-compilermethodologyisoftenfoundinprogramtransformationsystems.\nMetacompilersthatplayedasignificantroleinbothcomputerscienceandthecomputerindustryincludeMeta-II[5]anditsdescendentTreeMeta.[6]\nUnrealandUnrealTournamentunveiledalanguagecalledUnrealScript.ThisallowedforrapiddevelopmentofmodificationscomparedtothecompetitorQuake(usingtheIdTech2engine).TheIdTechengineusedstandardCcodemeaningChadtobelearnedandproperlyapplied,whileUnrealScriptwasoptimizedforeaseofuseandefficiency.Similarly,thedevelopmentofmorerecentgamesintroducedtheirownspecificlanguages,onemorecommonexampleisLuaforscripting.\nVariousBusinessRulesEngineshavebeendevelopedforautomatingpolicyandbusinessrulesusedinbothgovernmentandprivateindustry.ILOG,OraclePolicyAutomation,DTRules,DroolsandothersprovidesupportforDSLsaimedtosupportvariousproblemdomains.DTRulesgoessofarastodefineaninterfacefortheuseofmultipleDSLswithinaRuleSet.\nThepurposeofBusinessRulesEnginesistodefinearepresentationofbusinesslogicinashumanreadablefashionaspossible.Thisallowsbothsubjectmatterexpertsanddeveloperstoworkwithandunderstandthesamerepresentationofthebusinesslogic.MostRulesEnginesprovidebothanapproachtosimplifyingthecontrolstructuresforbusinesslogic(forexample,usingDeclarativeRulesorDecisionTables)coupledwithalternativestoprogrammingsyntaxinfavorofDSLs.\nStatisticalmodellershavedevelopeddomain-specificlanguagessuchas\nBugs,Jags,andStan.TheselanguagesprovideasyntaxfordescribingaBayesianmodel,andgenerateamethodforsolvingitusingsimulation.\nGenerateobjecthandlingandservicesbasedonaInterfaceDescriptionLanguageforadomain-specificlanguagesuchasJavaScriptforwebapplications,HTMLfordocumentation,C++forhighperformancecode,etc.ThisisdonebycrosslanguageframeworkssuchasApacheThriftorGoogleProtocolBuffers.\nGherkinisalanguagedesignedtodefinetestcasestocheckthebehaviourofsoftware,withoutspecifyinghowthatbehaviourisimplemented.Itismeanttobereadandusedbynon-technicalusersusinganaturallanguagesyntaxandaline-orienteddesign.ThetestsdefinedwithGherkinmustthenbeimplementedinageneralprogramminglanguage.Then,thestepsinaGherkinprogramactsasasyntaxformethodinvocationaccessibletonon-developers.\nOtherprominentexamplesofdomain-specificlanguagesinclude:\nSomeoftheadvantages:[1][2]\nSomeofthedisadvantages:\n