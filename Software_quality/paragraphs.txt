Inthecontextofsoftwareengineering,softwarequalityreferstotworelatedbutdistinctnotionsthatexistwhereverqualityisdefinedinabusinesscontext:\nManyaspectsofstructuralqualitycanbeevaluatedonlystaticallythroughtheanalysisofthesoftwareinnerstructure,itssourcecode,attheunitlevel,thetechnologylevelandthesystemlevel,whichisineffecthowitsarchitectureadherestosoundprinciplesofsoftwarearchitectureoutlinedinapaperonthetopicbyOMG.[2]Butsomestructuralqualities,suchasusability,canbeassessedonlydynamically(usersorothersactingintheirbehalfinteractwiththesoftwareor,atleast,someprototypeorpartialimplementation;eventheinteractionwithamockversionmadeincardboardrepresentsadynamictestbecausesuchversioncanbeconsideredaprototype).Otheraspects,suchasreliability,mightinvolvenotonlythesoftwarebutalsotheunderlyinghardware,therefore,itcanbeassessedbothstaticallyanddynamically(stresstest).\nFunctionalqualityistypicallyassesseddynamicallybutitisalsopossibletousestatictests(suchassoftwarereviews).\nHistorically,thestructure,classificationandterminologyofattributesandmetricsapplicabletosoftwarequalitymanagementhavebeenderivedorextractedfromtheISO9126-3andthesubsequentISO25000:2005[3]qualitymodel,alsoknownasSQuaRE.[4]Basedonthesemodels,theConsortiumforITSoftwareQuality(CISQ)hasdefinedfivemajordesirablestructuralcharacteristicsneededforapieceofsoftwaretoprovidebusinessvalue:Reliability,Efficiency,Security,Maintainabilityand(adequate)Size.\nSoftwarequalitymeasurementquantifiestowhatextentasoftwareprogramorsystemratesalongeachofthesefivedimensions.Anaggregatedmeasureofsoftwarequalitycanbecomputedthroughaqualitativeoraquantitativescoringschemeoramixofbothandthenaweightingsystemreflectingthepriorities.Thisviewofsoftwarequalitybeingpositionedonalinearcontinuumissupplementedbytheanalysisof"criticalprogrammingerrors"thatunderspecificcircumstancescanleadtocatastrophicoutagesorperformancedegradationsthatmakeagivensystemunsuitableforuseregardlessofratingbasedonaggregatedmeasurements.Suchprogrammingerrorsfoundatthesystemlevelrepresentupto90%ofproductionissues,whilstattheunit-level,eveniffarmorenumerous,programmingerrorsaccountforlessthan10%ofproductionissues.Asaconsequence,codequalitywithoutthecontextofthewholesystem,asW.EdwardsDemingdescribedit,haslimitedvalue.\nToview,explore,analyze,andcommunicatesoftwarequalitymeasurements,conceptsandtechniquesofinformationvisualizationprovidevisual,interactivemeansuseful,inparticular,ifseveralsoftwarequalitymeasureshavetoberelatedtoeachotherortocomponentsofasoftwareorsystem.Forexample,softwaremapsrepresentaspecializedapproachthat"canexpressandcombineinformationaboutsoftwaredevelopment,softwarequality,andsystemdynamics".[5]\n"Ascienceisasmatureasitsmeasurementtools,"(LouisPasteurinEbert&Dumke,p.Â 91).Measuringsoftwarequalityismotivatedbyatleasttworeasons:\nHowever,thedistinctionbetweenmeasuringandimprovingsoftwarequalityinanembeddedsystem(withemphasisonriskmanagement)andsoftwarequalityinbusinesssoftware(withemphasisoncostandmaintainabilitymanagement)isbecomingsomewhatirrelevant.Embeddedsystemsnowoftenincludeauserinterfaceandtheirdesignersareasmuchconcernedwithissuesaffectingusabilityanduserproductivityastheircounterpartswhofocusonbusinessapplications.ThelatterareinturnlookingatERPorCRMsystemasacorporatenervoussystemwhoseuptimeandperformancearevitaltothewell-beingoftheenterprise.Thisconvergenceismostvisibleinmobilecomputing:auserwhoaccessesanERPapplicationontheirsmartphoneisdependingonthequalityofsoftwareacrossalltypesofsoftwarelayers.\nBothtypesofsoftwarenowusemulti-layeredtechnologystacksandcomplexarchitecturesosoftwarequalityanalysisandmeasurementhavetobemanagedinacomprehensiveandconsistentmanner,decoupledfromthesoftware\'sultimatepurposeoruse.Inbothcases,engineersandmanagementneedtobeabletomakerationaldecisionsbasedonmeasurementandfact-basedanalysisinadherencetotheprecept"InGod(we)trust.Allothersbringdata".((mis-)attributedtoW.EdwardsDemingandothers).\nTherearemanydifferentdefinitionsofquality.Forsomeitisthe"capabilityofasoftwareproducttoconformtorequirements."(ISO/IEC9001,[10]commentedby[11])whileforothersitcanbesynonymouswith"customervalue"(Highsmith,2002)orevendefectlevel.\nThefirstdefinitionofqualityHistoryremembersisfromShewhartinthebeginningof20thcentury:Therearetwocommonaspectsofquality:oneofthemhastodowiththeconsiderationofthequalityofathingasanobjectiverealityindependentoftheexistenceofman.Theotherhastodowithwhatwethink,feelorsenseasaresultoftheobjectivereality.Inotherwords,thereisasubjectivesideofquality.(Shewhart[12])\nKitchenhamandPfleeger,[13]furtherreportingtheteachingsofDavidGarvin,[14]identifyfivedifferentperspectivesonquality:\nTheprobleminherentinattemptstodefinethequalityofaproduct,almostanyproduct,werestatedbythemasterWalterA.Shewhart.Thedifficultyindefiningqualityistotranslatefutureneedsoftheuserintomeasurablecharacteristics,sothataproductcanbedesignedandturnedouttogivesatisfactionatapricethattheuserwillpay.Thisisnoteasy,andassoonasonefeelsfairlysuccessfulintheendeavor,hefindsthattheneedsoftheconsumerhavechanged,competitorshavemovedin,etc.[16]Qualityisacustomerdetermination,notanengineer\'sdetermination,notamarketingdetermination,norageneralmanagementdetermination.Itisbasedonthecustomer\'sactualexperiencewiththeproductorservice,measuredagainsthisorherrequirements--statedorunstated,consciousormerelysensed,technicallyoperationalorentirelysubjective--andalwaysrepresentingamovingtargetinacompetitivemarket.[17]\nThewordqualityhasmultiplemeanings.Twoofthesemeaningsdominatetheuseoftheword:1.Qualityconsistsofthoseproductfeatureswhichmeettheneedofcustomersandtherebyprovideproductsatisfaction.2.Qualityconsistsoffreedomfromdeficiencies.Nevertheless,inahandbooksuchasthisitisconvenienttostandardizeonashortdefinitionofthewordqualityas"fitnessforuse".[18]\nEventhough"qualityisaperceptual,conditionalandsomewhatsubjectiveattributeandmaybeunderstooddifferentlybydifferentpeople"(asnotedinthearticleonqualityinbusiness),softwarestructuralqualitycharacteristicshavebeenclearlydefinedbytheConsortiumforITSoftwareQuality(CISQ).UndertheguidanceofBillCurtis,co-authoroftheCapabilityMaturityModelframeworkandCISQ\'sfirstDirector;andCapersJones,CISQ\'sDistinguishedAdvisor,CISQhasdefinedfivemajordesirablecharacteristicsofapieceofsoftwareneededtoprovidebusinessvalue.[19]IntheHouseofQualitymodel,theseare"Whats"thatneedtobeachieved:\nSoftwarefunctionalqualityisdefinedasconformancetoexplicitlystatedfunctionalrequirements,identifiedforexampleusingVoiceoftheCustomeranalysis(partoftheDesignforSixSigmatoolkitand/ordocumentedthroughusecases)andthelevelofsatisfactionexperiencedbyend-users.Thelatterisreferredastoasusabilityandisconcernedwithhowintuitiveandresponsivetheuserinterfaceis,howeasilysimpleandcomplexoperationscanbeperformed,andhowusefulerrormessagesare.Typically,softwaretestingpracticesandtoolsensurethatapieceofsoftwarebehavesincompliancewiththeoriginaldesign,planneduserexperienceanddesiredtestability,i.e.apieceofsoftware\'sdispositiontosupportacceptancecriteria.\nThedualstructural/functionaldimensionofsoftwarequalityisconsistentwiththemodelproposedinSteveMcConnell\'sCodeCompletewhichdividessoftwarecharacteristicsintotwopieces:internalandexternalqualitycharacteristics.Externalqualitycharacteristicsarethosepartsofaproductthatfaceitsusers,whereinternalqualitycharacteristicsarethosethatdonot.[21]\nOneofthechallengesindefiningqualityisthat"everyonefeelstheyunderstandit"[22]andotherdefinitionsofsoftwarequalitycouldbebasedonextendingthevariousdescriptionsoftheconceptofqualityusedinbusiness.\nDr.TomDeMarcohasproposedthat"aproduct\'squalityisafunctionofhowmuchitchangestheworldforthebetter."[23]Thiscanbeinterpretedasmeaningthatfunctionalqualityandusersatisfactionaremoreimportantthanstructuralqualityindeterminingsoftwarequality.\nAnotherdefinition,coinedbyGeraldWeinberginQualitySoftwareManagement:SystemsThinking,is"Qualityisvaluetosomeperson."[24][25]Thisdefinitionstressesthatqualityisinherentlysubjective\xe2\x80\x94differentpeoplewillexperiencethequalityofthesamesoftwaredifferently.Onestrengthofthisdefinitionisthequestionsitinvitessoftwareteamstoconsider,suchas"Whoarethepeoplewewanttovalueoursoftware?"and"Whatwillbevaluabletothem?".\n\nAlthoughtheconceptspresentedinthissectionareapplicabletobothstructuralandfunctionalsoftwarequality,measurementofthelatterisessentiallyperformedthroughtesting[seemainarticle:Softwaretesting].\nSoftwarequalitymeasurementisaboutquantifyingtowhatextentasystemorsoftwarepossessesdesirablecharacteristics.Thiscanbeperformedthroughqualitativeorquantitativemeansoramixofboth.Inbothcases,foreachdesirablecharacteristic,thereareasetofmeasurableattributestheexistenceofwhichinapieceofsoftwareorsystemtendtobecorrelatedandassociatedwiththischaracteristic.Forexample,anattributeassociatedwithportabilityisthenumberoftarget-dependentstatementsinaprogram.Moreprecisely,usingtheQualityFunctionDeploymentapproach,thesemeasurableattributesarethe"hows"thatneedtobeenforcedtoenablethe"whats"intheSoftwareQualitydefinitionabove.\nThestructure,classificationandterminologyofattributesandmetricsapplicabletosoftwarequalitymanagementhavebeenderivedorextractedfromtheISO9126-3andthesubsequentISO/IEC25000:2005qualitymodel.Themainfocusisoninternalstructuralquality.Subcategorieshavebeencreatedtohandlespecificareaslikebusinessapplicationarchitectureandtechnicalcharacteristicssuchasdataaccessandmanipulationorthenotionoftransactions.\nThedependencetreebetweensoftwarequalitycharacteristicsandtheirmeasurableattributesisrepresentedinthediagramontheright,whereeachofthe5characteristicsthatmatterfortheuser(right)orownerofthebusinesssystemdependsonmeasurableattributes(left):\nCorrelationsbetweenprogrammingerrorsandproductiondefectsunveilthatbasiccodeerrorsaccountfor92%ofthetotalerrorsinthesourcecode.Thesenumerouscode-levelissueseventuallycountforonly10%ofthedefectsinproduction.Badsoftwareengineeringpracticesatthearchitecturelevelsaccountforonly8%oftotaldefects,butconsumeoverhalftheeffortspentonfixingproblems,andleadto90%oftheseriousreliability,security,andefficiencyissuesinproduction.[26]\nManyoftheexistingsoftwaremeasurescountstructuralelementsoftheapplicationthatresultfromparsingthesourcecodeforsuchindividualinstructions(Park,1992),[27]tokens(Halstead,1977),[28]controlstructures(McCabe,1976),andobjects(Chidamber&Kemerer,1994).[29]\nSoftwarequalitymeasurementisaboutquantifyingtowhatextentasystemorsoftwareratesalongthesedimensions.Theanalysiscanbeperformedusingaqualitativeorquantitativeapproachoramixofbothtoprovideanaggregateview[usingforexampleweightedaverage(s)thatreflectrelativeimportancebetweenthefactorsbeingmeasured].\nThisviewofsoftwarequalityonalinearcontinuumhastobesupplementedbytheidentificationofdiscreteCriticalProgrammingErrors.Thesevulnerabilitiesmaynotfailatestcase,buttheyaretheresultofbadpracticesthatunderspecificcircumstancescanleadtocatastrophicoutages,performancedegradations,securitybreaches,corrupteddata,andmyriadotherproblems(Nygard,2007)[30]thatmakeagivensystemdefactounsuitableforuseregardlessofitsratingbasedonaggregatedmeasurements.Awell-knownexampleofvulnerabilityistheCommonWeaknessEnumeration,[31]arepositoryofvulnerabilitiesinthesourcecodethatmakeapplicationsexposedtosecuritybreaches.\nThemeasurementofcriticalapplicationcharacteristicsinvolvesmeasuringstructuralattributesoftheapplication\'sarchitecture,coding,andin-linedocumentation,asdisplayedinthepictureabove.Thus,eachcharacteristicisaffectedbyattributesatnumerouslevelsofabstractionintheapplicationandallofwhichmustbeincludedcalculatingthecharacteristic\'smeasureifitistobeavaluablepredictorofqualityoutcomesthataffectthebusiness.ThelayeredapproachtocalculatingcharacteristicmeasuresdisplayedinthefigureabovewasfirstproposedbyBoehmandhiscolleaguesatTRW(Boehm,1978)[32]andistheapproachtakenintheISO9126and25000seriesstandards.Theseattributescanbemeasuredfromtheparsedresultsofastaticanalysisoftheapplicationsourcecode.Evendynamiccharacteristicsofapplicationssuchasreliabilityandperformanceefficiencyhavetheircausalrootsinthestaticstructureoftheapplication.\nStructuralqualityanalysisandmeasurementisperformedthroughtheanalysisofthesourcecode,thearchitecture,softwareframework,databaseschemainrelationshiptoprinciplesandstandardsthattogetherdefinetheconceptualandlogicalarchitectureofasystem.Thisisdistinctfromthebasic,local,component-levelcodeanalysistypicallyperformedbydevelopmenttoolswhicharemostlyconcernedwithimplementationconsiderationsandarecrucialduringdebuggingandtestingactivities.\nTherootcausesofpoorreliabilityarefoundinacombinationofnon-compliancewithgoodarchitecturalandcodingpractices.Thisnon-compliancecanbedetectedbymeasuringthestaticqualityattributesofanapplication.Assessingthestaticattributesunderlyinganapplication\'sreliabilityprovidesanestimateofthelevelofbusinessriskandthelikelihoodofpotentialapplicationfailuresanddefectstheapplicationwillexperiencewhenplacedinoperation.\nAssessingreliabilityrequireschecksofatleastthefollowingsoftwareengineeringbestpracticesandtechnicalattributes:\nDependingontheapplicationarchitectureandthethird-partycomponentsused(suchasexternallibrariesorframeworks),customchecksshouldbedefinedalongthelinesdrawnbytheabovelistofbestpracticestoensureabetterassessmentofthereliabilityofthedeliveredsoftware.\nAswithReliability,thecausesofperformanceinefficiencyareoftenfoundinviolationsofgoodarchitecturalandcodingpracticewhichcanbedetectedbymeasuringthestaticqualityattributesofanapplication.Thesestaticattributespredictpotentialoperationalperformancebottlenecksandfuturescalabilityproblems,especiallyforapplicationsrequiringhighexecutionspeedforhandlingcomplexalgorithmsorhugevolumesofdata.\nAssessingperformanceefficiencyrequirescheckingatleastthefollowingsoftwareengineeringbestpracticesandtechnicalattributes:\nMostsecurityvulnerabilitiesresultfrompoorcodingandarchitecturalpracticessuchasSQLinjectionorcross-sitescripting.ThesearewelldocumentedinlistsmaintainedbyCWE,[33]andtheSEI/ComputerEmergencyCenter(CERT)atCarnegieMellonUniversity.\nAssessingsecurityrequiresatleastcheckingthefollowingsoftwareengineeringbestpracticesandtechnicalattributes:\nMaintainabilityincludesconceptsofmodularity,understandability,changeability,testability,reusability,andtransferabilityfromonedevelopmentteamtoanother.Thesedonottaketheformofcriticalissuesatthecodelevel.Rather,poormaintainabilityistypicallytheresultofthousandsofminorviolationswithbestpracticesindocumentation,complexityavoidancestrategy,andbasicprogrammingpracticesthatmakethedifferencebetweencleanandeasy-to-readcodevs.unorganizedanddifficult-to-readcode.[35]\nAssessingmaintainabilityrequirescheckingthefollowingsoftwareengineeringbestpracticesandtechnicalattributes:\nMaintainabilityiscloselyrelatedtoWardCunningham\'sconceptoftechnicaldebt,whichisanexpressionofthecostsresultingofalackofmaintainability.\nReasonsforwhymaintainabilityislowcanbeclassifiedasrecklessvs.prudentanddeliberatevs.inadvertent,[36]andoftenhavetheiroriginindevelopers\'inability,lackoftimeandgoals,theircarelessnessanddiscrepanciesinthecreationcostofandbenefitsfromdocumentationand,inparticular,maintainablesourcecode.[37]\nMeasuringsoftwaresizerequiresthatthewholesourcecodebecorrectlygathered,includingdatabasestructurescripts,datamanipulationsourcecode,componentheaders,configurationfilesetc.Thereareessentiallytwotypesofsoftwaresizestobemeasured,thetechnicalsize(footprint)andthefunctionalsize:\nThefunctionpointanalysissizingstandardissupportedbytheInternationalFunctionPointUsersGroup(IFPUG).Itcanbeappliedearlyinthesoftwaredevelopmentlife-cycleanditisnotdependentonlinesofcodelikethesomewhatinaccurateBackfiringmethod.Themethodistechnologyagnosticandcanbeusedforcomparativeanalysisacrossorganizationsandacrossindustries.\nSincetheinceptionofFunctionPointAnalysis,severalvariationshaveevolvedandthefamilyoffunctionalsizingtechniqueshasbroadenedtoincludesuchsizingmeasuresasCOSMIC,NESMA,UseCasePoints,FPLite,EarlyandQuickFPs,andmostrecentlyStoryPoints.However,FunctionPointshasahistoryofstatisticalaccuracy,andhasbeenusedasacommonunitofworkmeasurementinnumerousapplicationdevelopmentmanagement(ADM)oroutsourcingengagements,servingasthe"currency"bywhichservicesaredeliveredandperformanceismeasured.\nOnecommonlimitationtotheFunctionPointmethodologyisthatitisamanualprocessandthereforeitcanbelabor-intensiveandcostlyinlargescaleinitiativessuchasapplicationdevelopmentoroutsourcingengagements.ThisnegativeaspectofapplyingthemethodologymaybewhatmotivatedindustryITleaderstoformtheConsortiumforITSoftwareQualityfocusedonintroducingacomputablemetricsstandardforautomatingthemeasuringofsoftwaresizewhiletheIFPUGkeeppromotingamanualapproachasmostofitsactivityrelyonFPcounterscertifications.\nCISQannouncedtheavailabilityofitsfirstmetricstandard,AutomatedFunctionPoints,totheCISQmembership,inCISQTechnical.TheserecommendationshavebeendevelopedinOMG\'sRequestforCommentformatandsubmittedtoOMG\'sprocessforstandardization.[citationneeded]\n\nCriticalProgrammingErrorsarespecificarchitecturaland/orcodingbadpracticesthatresultinthehighest,immediateorlongterm,businessdisruptionrisk.\nThesearequiteoftentechnology-relatedanddependheavilyonthecontext,businessobjectivesandrisks.Somemayconsiderrespectfornamingconventionswhileothers\xe2\x80\x93thosepreparingthegroundforaknowledgetransferforexample\xe2\x80\x93willconsideritasabsolutelycritical.\nCriticalProgrammingErrorscanalsobeclassifiedperCISQCharacteristics.Basicexamplebelow:\nNewerproposalsforqualitymodelssuchasSqualeandQuamoco[38]propagateadirectintegrationofthedefinitionofqualityattributesandmeasurement.Bybreakingdownqualityattributesorevendefiningadditionallayers,thecomplex,abstractqualityattributes(suchasreliabilityormaintainability)becomemoremanageableandmeasurable.Thosequalitymodelshavebeenappliedinindustrialcontextsbuthavenotreceivedwidespreadadoption.\nNotes\nBibliography\n