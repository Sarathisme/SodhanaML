Arandomizedalgorithmisanalgorithmthatemploysadegreeofrandomnessaspartofitslogic.Thealgorithmtypicallyusesuniformlyrandombitsasanauxiliaryinputtoguideitsbehavior,inthehopeofachievinggoodperformanceinthe"averagecase"overallpossiblechoicesofrandombits.Formally,thealgorithm\'sperformancewillbearandomvariabledeterminedbytherandombits;thuseithertherunningtime,ortheoutput(orboth)arerandomvariables.\nOnehastodistinguishbetweenalgorithmsthatusetherandominputsothattheyalwaysterminatewiththecorrectanswer,butwheretheexpectedrunningtimeisfinite(LasVegasalgorithms,forexampleQuicksort[1]),andalgorithmswhichhaveachanceofproducinganincorrectresult(MonteCarloalgorithms,forexampletheMonteCarloalgorithmfortheMFASproblem[2])orfailtoproducearesulteitherbysignalingafailureorfailingtoterminate.\nInthesecondcase,randomperformanceandrandomoutput,theterm"algorithm"foraprocedureissomewhatquestionable.Inthecaseofrandomoutput,itisnolongerformallyeffective.[3]\nHowever,insomecases,probabilisticalgorithmsaretheonlypracticalmeansofsolvingaproblem.[4]\nIncommonpractice,randomizedalgorithmsareapproximatedusingapseudorandomnumbergeneratorinplaceofatruesourceofrandombits;suchanimplementationmaydeviatefromtheexpectedtheoreticalbehavior.\nAsamotivatingexample,considertheproblemoffindingan\xe2\x80\x98a\xe2\x80\x99inanarrayofnelements.\nInput:Anarrayofn\xe2\x89\xa52elements,inwhichhalfare\xe2\x80\x98a\xe2\x80\x99sandtheotherhalfare\xe2\x80\x98b\xe2\x80\x99s.\nOutput:Findan\xe2\x80\x98a\xe2\x80\x99inthearray.\nWegivetwoversionsofthealgorithm,oneLasVegasalgorithmandoneMonteCarloalgorithm.\nLasVegasalgorithm:\nThisalgorithmsucceedswithprobability1.Thenumberofiterationsvariesandcanbearbitrarilylarge,buttheexpectednumberofiterationsis\nSinceitisconstanttheexpectedruntimeovermanycallsis\n\n\n\nΘ\n(\n1\n)\n\n\n{\\displaystyle\\Theta(1)}\n\n.(SeeBigOnotation)\nMonteCarloalgorithm:\nIfan\xe2\x80\x98a\xe2\x80\x99isfound,thealgorithmsucceeds,elsethealgorithmfails.Afterkiterations,theprobabilityoffindingan\xe2\x80\x98a\xe2\x80\x99is:\n\n\n\n\nPr\n[\n\nf\ni\nn\nd\n \na\n\n]\n=\n1\n−\n(\n1\n\n/\n\n2\n\n)\n\nk\n\n\n\n\n{\\displaystyle\\Pr[\\mathrm{find~a}]=1-(1/2)^{k}}\n\n\nThisalgorithmdoesnotguaranteesuccess,buttheruntimeisbounded.Thenumberofiterationsisalwayslessthanorequaltok.Takingktobeconstanttheruntime(expectedandabsolute)is\n\n\n\nΘ\n(\n1\n)\n\n\n{\\displaystyle\\Theta(1)}\n\n.\nRandomizedalgorithmsareparticularlyusefulwhenfacedwithamalicious"adversary"orattackerwhodeliberatelytriestofeedabadinputtothealgorithm(seeworst-casecomplexityandcompetitiveanalysis(onlinealgorithm))suchasinthePrisoner\'sdilemma.Itisforthisreasonthatrandomnessisubiquitousincryptography.Incryptographicapplications,pseudo-randomnumberscannotbeused,sincetheadversarycanpredictthem,makingthealgorithmeffectivelydeterministic.Therefore,eitherasourceoftrulyrandomnumbersoracryptographicallysecurepseudo-randomnumbergeneratorisrequired.Anotherareainwhichrandomnessisinherentisquantumcomputing.\nIntheexampleabove,theLasVegasalgorithmalwaysoutputsthecorrectanswer,butitsrunningtimeisarandomvariable.TheMonteCarloalgorithm(relatedtotheMonteCarlomethodforsimulation)isguaranteedtocompleteinanamountoftimethatcanbeboundedbyafunctiontheinputsizeanditsparameterk,butallowsasmallprobabilityoferror.ObservethatanyLasVegasalgorithmcanbeconvertedintoaMonteCarloalgorithm(viaMarkov\'sinequality),byhavingitoutputanarbitrary,possiblyincorrectanswerifitfailstocompletewithinaspecifiedtime.Conversely,ifanefficientverificationprocedureexiststocheckwhetheranansweriscorrect,thenaMonteCarloalgorithmcanbeconvertedintoaLasVegasalgorithmbyrunningtheMonteCarloalgorithmrepeatedlytillacorrectanswerisobtained.\nComputationalcomplexitytheorymodelsrandomizedalgorithmsasprobabilisticTuringmachines.BothLasVegasandMonteCarloalgorithmsareconsidered,andseveralcomplexityclassesarestudied.ThemostbasicrandomizedcomplexityclassisRP,whichistheclassofdecisionproblemsforwhichthereisanefficient(polynomialtime)randomizedalgorithm(orprobabilisticTuringmachine)whichrecognizesNO-instanceswithabsolutecertaintyandrecognizesYES-instanceswithaprobabilityofatleast1/2.ThecomplementclassforRPisco-RP.Problemclasseshaving(possiblynonterminating)algorithmswithpolynomialtimeaveragecaserunningtimewhoseoutputisalwayscorrectaresaidtobeinZPP.\nTheclassofproblemsforwhichbothYESandNO-instancesareallowedtobeidentifiedwithsomeerroriscalledBPP.ThisclassactsastherandomizedequivalentofP,i.e.BPPrepresentstheclassofefficientrandomizedalgorithms.\nHistorically,thefirstrandomizedalgorithmwasamethoddevelopedbyMichaelO.Rabinfortheclosestpairproblemincomputationalgeometry.[5]\nThestudyofrandomizedalgorithmswasspurredbythe1977discoveryofarandomizedprimalitytest(i.e.,determiningtheprimalityofanumber)byRobertM.SolovayandVolkerStrassen.SoonafterwardsMichaelO.Rabindemonstratedthatthe1976Miller\'sprimalitytestcanbeturnedintoarandomizedalgorithm.Atthattime,nopracticaldeterministicalgorithmforprimalitywasknown.\nTheMiller-Rabinprimalitytestreliesonabinaryrelationbetweentwopositiveintegerskandnthatcanbeexpressedbysayingthatk"isawitnesstothecompositenessof"n.Itcanbeshownthat\nObservethatthisimpliesthattheprimalityproblemisinCo-RP.\nIfonerandomlychooses100numberslessthanacompositenumbern,thentheprobabilityoffailingtofindsucha"witness"is(1/4)100sothatformostpracticalpurposes,thisisagoodprimalitytest.Ifnisbig,theremaybenoothertestthatispractical.Theprobabilityoferrorcanbereducedtoanarbitrarydegreebyperformingenoughindependenttests.\nTherefore,inpractice,thereisnopenaltyassociatedwithacceptingasmallprobabilityoferror,sincewithalittlecaretheprobabilityoferrorcanbemadeastronomicallysmall.Indeed,eventhoughadeterministicpolynomial-timeprimalitytesthassincebeenfound(seeAKSprimalitytest),ithasnotreplacedtheolderprobabilistictestsincryptographicsoftwarenorisitexpectedtodosofortheforeseeablefuture.\nQuicksortisafamiliar,commonlyusedalgorithminwhichrandomnesscanbeuseful.AnydeterministicversionofthisalgorithmrequiresO(n2)timetosortnnumbersforsomewell-definedclassofdegenerateinputs(suchasanalreadysortedarray),withthespecificclassofinputsthatgeneratethisbehaviordefinedbytheprotocolforpivotselection.However,ifthealgorithmselectspivotelementsuniformlyatrandom,ithasaprovablyhighprobabilityoffinishinginO(n log n)timeregardlessofthecharacteristicsoftheinput.\nIncomputationalgeometry,astandardtechniquetobuildastructurelikeaconvexhullorDelaunaytriangulationistorandomlypermutetheinputpointsandtheninsertthemonebyoneintotheexistingstructure.Therandomizationensuresthattheexpectednumberofchangestothestructurecausedbyaninsertionissmall,andsotheexpectedrunningtimeofthealgorithmcanbeupperbounded.Thistechniqueisknownasrandomizedincrementalconstruction.[6]\nInput:AgraphG(V,E)\nOutput:AcutpartitioningtheverticesintoLandR,withtheminimumnumberofedgesbetweenLandR.\nRecallthatthecontractionoftwonodes,uandv,ina(multi-)graphyieldsanewnodeu\'withedgesthataretheunionoftheedgesincidentoneitheruorv,exceptfromanyedge(s)connectinguandv.Figure1givesanexampleofcontractionofvertexAandB.\nAftercontraction,theresultinggraphmayhaveparalleledges,butcontainsnoselfloops.\nKarger\'s[7]basicalgorithm:\nIneachexecutionoftheouterloop,thealgorithmrepeatstheinnerloopuntilonly2nodesremain,thecorrespondingcutisobtained.Theruntimeofoneexecutionis\n\n\n\nO\n(\nn\n)\n\n\n{\\displaystyleO(n)}\n\n,andndenotesthenumberofvertices.\nAftermtimesexecutionsoftheouterloop,weoutputtheminimumcutamongalltheresults.Thefigure2givesan\nexampleofoneexecutionofthealgorithm.Afterexecution,wegetacutofsize3.\nLemma1:Letkbethemincutsize,andletC={e1,e2,...,ek}bethemincut.If,duringiterationi,noedgee\xe2\x88\x88Cisselectedforcontraction,thenCi = C.\nProof:IfGisnotconnected,thenGcanbepartitionedintoLandRwithoutanyedgebetweenthem.Sothemincutinadisconnectedgraphis0.Now,assumeGisconnected.LetV=L\xe2\x88\xaaRbethepartitionofVinducedbyC :C={{u,v}\xe2\x88\x88E :u\xe2\x88\x88L,v\xe2\x88\x88R}(well-definedsinceGisconnected).Consideranedge{u,v}ofC.Initially,u,varedistinctvertices.Aslongaswepickanedge\n\n\n\nf\n≠\ne\n\n\n{\\displaystylef\\neqe}\n\n,uandvdonotgetmerged.Thus,attheendofthealgorithm,wehavetwocompoundnodescoveringtheentiregraph,oneconsistingoftheverticesofLandtheotherconsistingoftheverticesofR.Asinfigure2,thesizeofmincutis1,andC={(A,B)}.Ifwedon\'tselect(A,B)forcontraction,wecangetthemincut.\nLemma2:IfGisamultigraphwithpverticesandwhosemincuthassizek,thenGhasatleastpk/2edges.\nProof:\nBecausethemincutisk,everyvertexvmustsatisfydegree(v)\xe2\x89\xa5k.Therefore,thesumofthedegreeisatleastpk.Butitiswellknownthatthesumofvertexdegreesequals2|E|.Thelemmafollows.\nAnalysisofalgorithm\nTheprobabilitythatthealgorithmsucceedsis1 − theprobabilitythatallattemptsfail.Byindependence,theprobabilitythatallattemptsfailis\n\n\n\n\n\n∏\n\ni\n=\n1\n\n\nm\n\n\nPr\n(\n\nC\n\ni\n\n\n≠\nC\n)\n=\n\n∏\n\ni\n=\n1\n\n\nm\n\n\n(\n1\n−\nPr\n(\n\nC\n\ni\n\n\n=\nC\n)\n)\n.\n\n\n{\\displaystyle\\prod_{i=1}^{m}\\Pr(C_{i}\\neqC)=\\prod_{i=1}^{m}(1-\\Pr(C_{i}=C)).}\n\n\nBylemma1,theprobabilitythatCi = CistheprobabilitythatnoedgeofCisselectedduringiterationi.ConsidertheinnerloopandletGjdenotethegraphafterjedgecontractions,wherej \xe2\x88\x88 {0,1,...,n − 3}.Gjhasn − jvertices.Weusethechainruleofconditionalpossibilities.\nTheprobabilitythattheedgechosenatiterationjisnotinC,giventhatnoedgeofChasbeenchosenbefore,is\n\n\n\n1\n−\n\n\nk\n\n\n|\n\nE\n(\n\nG\n\nj\n\n\n)\n\n|\n\n\n\n\n\n\n{\\displaystyle1-{\\frac{k}{|E(G_{j})|}}}\n\n.NotethatGjstillhasmincutofsizek,sobyLemma2,itstillhasatleast\n\n\n\n\n\n\n(\nn\n−\nj\n)\nk\n\n2\n\n\n\n\n{\\displaystyle{\\frac{(n-j)k}{2}}}\n\nedges.\nThus,\n\n\n\n1\n−\n\n\nk\n\n\n|\n\nE\n(\n\nG\n\nj\n\n\n)\n\n|\n\n\n\n\n≥\n1\n−\n\n\n2\n\nn\n−\nj\n\n\n\n=\n\n\n\nn\n−\nj\n−\n2\n\n\nn\n−\nj\n\n\n\n\n\n{\\displaystyle1-{\\frac{k}{|E(G_{j})|}}\\geq1-{\\frac{2}{n-j}}={\\frac{n-j-2}{n-j}}}\n\n.\nSobythechainrule,theprobabilityoffindingthemincutCis\n\n\n\n\nP\nr\n[\n\nC\n\ni\n\n\n=\nC\n]\n≥\n\n(\n\n\n\nn\n−\n2\n\nn\n\n\n)\n\n\n(\n\n\n\nn\n−\n3\n\n\nn\n−\n1\n\n\n\n)\n\n\n(\n\n\n\nn\n−\n4\n\n\nn\n−\n2\n\n\n\n)\n\n…\n\n(\n\n\n3\n5\n\n\n)\n\n\n(\n\n\n2\n4\n\n\n)\n\n\n(\n\n\n1\n3\n\n\n)\n\n.\n\n\n{\\displaystylePr[C_{i}=C]\\geq\\left({\\frac{n-2}{n}}\\right)\\left({\\frac{n-3}{n-1}}\\right)\\left({\\frac{n-4}{n-2}}\\right)\\ldots\\left({\\frac{3}{5}}\\right)\\left({\\frac{2}{4}}\\right)\\left({\\frac{1}{3}}\\right).}\n\n\nCancellationgives\n\n\n\nPr\n[\n\nC\n\ni\n\n\n=\nC\n]\n≥\n\n\n2\n\nn\n(\nn\n−\n1\n)\n\n\n\n\n\n{\\displaystyle\\Pr[C_{i}=C]\\geq{\\frac{2}{n(n-1)}}}\n\n.Thustheprobabilitythatthealgorithmsucceedsisatleast\n\n\n\n1\n−\n\n\n(\n\n1\n−\n\n\n2\n\nn\n(\nn\n−\n1\n)\n\n\n\n\n)\n\n\nm\n\n\n\n\n{\\displaystyle1-\\left(1-{\\frac{2}{n(n-1)}}\\right)^{m}}\n\n.For\n\n\n\nm\n=\n\n\n\nn\n(\nn\n−\n1\n)\n\n2\n\n\nln\n⁡\nn\n\n\n{\\displaystylem={\\frac{n(n-1)}{2}}\\lnn}\n\n,thisisequivalentto\n\n\n\n1\n−\n\n\n1\nn\n\n\n\n\n{\\displaystyle1-{\\frac{1}{n}}}\n\n.Thealgorithmfindsthemincutwithprobability\n\n\n\n1\n−\n\n\n1\nn\n\n\n\n\n{\\displaystyle1-{\\frac{1}{n}}}\n\n,intime\n\n\n\nO\n(\nm\nn\n)\n=\nO\n(\n\nn\n\n3\n\n\nlog\n⁡\nn\n)\n\n\n{\\displaystyleO(mn)=O(n^{3}\\logn)}\n\n.\nRandomnesscanbeviewedasaresource,likespaceandtime.Derandomizationisthentheprocessofremovingrandomness(orusingaslittleofitaspossible).Itisnotcurrentlyknownifallalgorithmscanbederandomizedwithoutsignificantlyincreasingtheirrunningtime.Forinstance,incomputationalcomplexity,itisunknownwhetherP=BPP,i.e.,wedonotknowwhetherwecantakeanarbitraryrandomizedalgorithmthatruninpolynomialtimewithasmallerrorprobabilityandderandomizeittoruninpolynomialtimewithoutusingrandomness.\nTherearespecificmethodsthatcanbeemployedtoderandomizeparticularrandomizedalgorithms:\nWhenthemodelofcomputationisrestrictedtoTuringmachines,itiscurrentlyanopenquestionwhethertheabilitytomakerandomchoicesallowssomeproblemstobesolvedinpolynomialtimethatcannotbesolvedinpolynomialtimewithoutthisability;thisisthequestionofwhetherP=BPP.However,inothercontexts,therearespecificexamplesofproblemswhererandomizationyieldsstrictimprovements.\n