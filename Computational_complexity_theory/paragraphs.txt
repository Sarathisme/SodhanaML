\nComputationalcomplexitytheoryfocusesonclassifyingcomputationalproblemsaccordingtotheirinherentdifficulty,andrelatingtheseclassestoeachother.Acomputationalproblemisatasksolvedbyacomputer.Acomputationproblemissolvablebymechanicalapplicationofmathematicalsteps,suchasanalgorithm.\nAproblemisregardedasinherentlydifficultifitssolutionrequiressignificantresources,whateverthealgorithmused.Thetheoryformalizesthisintuition,byintroducingmathematicalmodelsofcomputationtostudytheseproblemsandquantifyingtheircomputationalcomplexity,i.e.,theamountofresourcesneededtosolvethem,suchastimeandstorage.Othermeasuresofcomplexityarealsoused,suchastheamountofcommunication(usedincommunicationcomplexity),thenumberofgatesinacircuit(usedincircuitcomplexity)andthenumberofprocessors(usedinparallelcomputing).Oneoftherolesofcomputationalcomplexitytheoryistodeterminethepracticallimitsonwhatcomputerscanandcannotdo.ThePversusNPproblem,oneofthesevenMilleniumPrizeProblems,isdedicatedtothefieldofcomputationalcomplexity.[1]\nCloselyrelatedfieldsintheoreticalcomputerscienceareanalysisofalgorithmsandcomputabilitytheory.Akeydistinctionbetweenanalysisofalgorithmsandcomputationalcomplexitytheoryisthattheformerisdevotedtoanalyzingtheamountofresourcesneededbyaparticularalgorithmtosolveaproblem,whereasthelatterasksamoregeneralquestionaboutallpossiblealgorithmsthatcouldbeusedtosolvethesameproblem.Moreprecisely,computationalcomplexitytheorytriestoclassifyproblemsthatcanorcannotbesolvedwithappropriatelyrestrictedresources.Inturn,imposingrestrictionsontheavailableresourcesiswhatdistinguishescomputationalcomplexityfromcomputabilitytheory:thelattertheoryaskswhatkindofproblemscan,inprinciple,besolvedalgorithmically.\nAcomputationalproblemcanbeviewedasaninfinitecollectionofinstancestogetherwithasolutionforeveryinstance.Theinputstringforacomputationalproblemisreferredtoasaprobleminstance,andshouldnotbeconfusedwiththeproblemitself.Incomputationalcomplexitytheory,aproblemreferstotheabstractquestiontobesolved.Incontrast,aninstanceofthisproblemisaratherconcreteutterance,whichcanserveastheinputforadecisionproblem.Forexample,considertheproblemofprimalitytesting.Theinstanceisanumber(e.g.,15)andthesolutionis"yes"ifthenumberisprimeand"no"otherwise(inthiscase,15isnotprimeandtheansweris"no").Statedanotherway,theinstanceisaparticularinputtotheproblem,andthesolutionistheoutputcorrespondingtothegiveninput.\nTofurtherhighlightthedifferencebetweenaproblemandaninstance,considerthefollowinginstanceofthedecisionversionofthetravelingsalesmanproblem:Istherearouteofatmost2000kilometrespassingthroughallofGermany\'s15largestcities?Thequantitativeanswertothisparticularprobleminstanceisoflittleuseforsolvingotherinstancesoftheproblem,suchasaskingforaroundtripthroughallsitesinMilanwhosetotallengthisatmost10 km.Forthisreason,complexitytheoryaddressescomputationalproblemsandnotparticularprobleminstances.\nWhenconsideringcomputationalproblems,aprobleminstanceisastringoveranalphabet.Usually,thealphabetistakentobethebinaryalphabet(i.e.,theset{0,1}),andthusthestringsarebitstrings.Asinareal-worldcomputer,mathematicalobjectsotherthanbitstringsmustbesuitablyencoded.Forexample,integerscanberepresentedinbinarynotation,andgraphscanbeencodeddirectlyviatheiradjacencymatrices,orbyencodingtheiradjacencylistsinbinary.\nEventhoughsomeproofsofcomplexity-theoretictheoremsregularlyassumesomeconcretechoiceofinputencoding,onetriestokeepthediscussionabstractenoughtobeindependentofthechoiceofencoding.Thiscanbeachievedbyensuringthatdifferentrepresentationscanbetransformedintoeachotherefficiently.\nDecisionproblemsareoneofthecentralobjectsofstudyincomputationalcomplexitytheory.Adecisionproblemisaspecialtypeofcomputationalproblemwhoseansweriseitheryesorno,oralternatelyeither1or0.Adecisionproblemcanbeviewedasaformallanguage,wherethemembersofthelanguageareinstanceswhoseoutputisyes,andthenon-membersarethoseinstanceswhoseoutputisno.Theobjectiveistodecide,withtheaidofanalgorithm,whetheragiveninputstringisamemberoftheformallanguageunderconsideration.Ifthealgorithmdecidingthisproblemreturnstheansweryes,thealgorithmissaidtoaccepttheinputstring,otherwiseitissaidtorejecttheinput.\nAnexampleofadecisionproblemisthefollowing.Theinputisanarbitrarygraph.Theproblemconsistsindecidingwhetherthegivengraphisconnected,ornot.Theformallanguageassociatedwiththisdecisionproblemisthenthesetofallconnectedgraphs\xe2\x80\x94toobtainaprecisedefinitionofthislanguage,onehastodecidehowgraphsareencodedasbinarystrings.\nAfunctionproblemisacomputationalproblemwhereasingleoutput(ofatotalfunction)isexpectedforeveryinput,buttheoutputismorecomplexthanthatofadecisionproblem\xe2\x80\x94thatis,theoutputisn\'tjustyesorno.Notableexamplesincludethetravelingsalesmanproblemandtheintegerfactorizationproblem.\nItistemptingtothinkthatthenotionoffunctionproblemsismuchricherthanthenotionofdecisionproblems.However,thisisnotreallythecase,sincefunctionproblemscanberecastasdecisionproblems.Forexample,themultiplicationoftwointegerscanbeexpressedasthesetoftriples(a, b, c)suchthattherelationa \xc3\x97 b = cholds.Decidingwhetheragiventripleisamemberofthissetcorrespondstosolvingtheproblemofmultiplyingtwonumbers.\nTomeasurethedifficultyofsolvingacomputationalproblem,onemaywishtoseehowmuchtimethebestalgorithmrequirestosolvetheproblem.However,therunningtimemay,ingeneral,dependontheinstance.Inparticular,largerinstanceswillrequiremoretimetosolve.Thusthetimerequiredtosolveaproblem(orthespacerequired,oranymeasureofcomplexity)iscalculatedasafunctionofthesizeoftheinstance.Thisisusuallytakentobethesizeoftheinputinbits.Complexitytheoryisinterestedinhowalgorithmsscalewithanincreaseintheinputsize.Forinstance,intheproblemoffindingwhetheragraphisconnected,howmuchmoretimedoesittaketosolveaproblemforagraphwith2nverticescomparedtothetimetakenforagraphwithnvertices?\nIftheinputsizeisn,thetimetakencanbeexpressedasafunctionofn.Sincethetimetakenondifferentinputsofthesamesizecanbedifferent,theworst-casetimecomplexityT(n)isdefinedtobethemaximumtimetakenoverallinputsofsizen.IfT(n)isapolynomialinn,thenthealgorithmissaidtobeapolynomialtimealgorithm.Cobham\'sthesisarguesthataproblemcanbesolvedwithafeasibleamountofresourcesifitadmitsapolynomialtimealgorithm.\nATuringmachineisamathematicalmodelofageneralcomputingmachine.Itisatheoreticaldevicethatmanipulatessymbolscontainedonastripoftape.Turingmachinesarenotintendedasapracticalcomputingtechnology,butratherasageneralmodelofacomputingmachine\xe2\x80\x94anythingfromanadvancedsupercomputertoamathematicianwithapencilandpaper.Itisbelievedthatifaproblemcanbesolvedbyanalgorithm,thereexistsaTuringmachinethatsolvestheproblem.Indeed,thisisthestatementoftheChurch\xe2\x80\x93Turingthesis.Furthermore,itisknownthateverythingthatcanbecomputedonothermodelsofcomputationknowntoustoday,suchasaRAMmachine,Conway\'sGameofLife,cellularautomataoranyprogramminglanguagecanbecomputedonaTuringmachine.SinceTuringmachinesareeasytoanalyzemathematically,andarebelievedtobeaspowerfulasanyothermodelofcomputation,theTuringmachineisthemostcommonlyusedmodelincomplexitytheory.\nManytypesofTuringmachinesareusedtodefinecomplexityclasses,suchasdeterministicTuringmachines,probabilisticTuringmachines,non-deterministicTuringmachines,quantumTuringmachines,symmetricTuringmachinesandalternatingTuringmachines.Theyareallequallypowerfulinprinciple,butwhenresources(suchastimeorspace)arebounded,someofthesemaybemorepowerfulthanothers.\nAdeterministicTuringmachineisthemostbasicTuringmachine,whichusesafixedsetofrulestodetermineitsfutureactions.AprobabilisticTuringmachineisadeterministicTuringmachinewithanextrasupplyofrandombits.Theabilitytomakeprobabilisticdecisionsoftenhelpsalgorithmssolveproblemsmoreefficiently.Algorithmsthatuserandombitsarecalledrandomizedalgorithms.Anon-deterministicTuringmachineisadeterministicTuringmachinewithanaddedfeatureofnon-determinism,whichallowsaTuringmachinetohavemultiplepossiblefutureactionsfromagivenstate.Onewaytoviewnon-determinismisthattheTuringmachinebranchesintomanypossiblecomputationalpathsateachstep,andifitsolvestheprobleminanyofthesebranches,itissaidtohavesolvedtheproblem.Clearly,thismodelisnotmeanttobeaphysicallyrealizablemodel,itisjustatheoreticallyinterestingabstractmachinethatgivesrisetoparticularlyinterestingcomplexityclasses.Forexamples,seenon-deterministicalgorithm.\nManymachinemodelsdifferentfromthestandardmulti-tapeTuringmachineshavebeenproposedintheliterature,forexamplerandomaccessmachines.Perhapssurprisingly,eachofthesemodelscanbeconvertedtoanotherwithoutprovidinganyextracomputationalpower.Thetimeandmemoryconsumptionofthesealternatemodelsmayvary.[2]Whatallthesemodelshaveincommonisthatthemachinesoperatedeterministically.\nHowever,somecomputationalproblemsareeasiertoanalyzeintermsofmoreunusualresources.Forexample,anon-deterministicTuringmachineisacomputationalmodelthatisallowedtobranchouttocheckmanydifferentpossibilitiesatonce.Thenon-deterministicTuringmachinehasverylittletodowithhowwephysicallywanttocomputealgorithms,butitsbranchingexactlycapturesmanyofthemathematicalmodelswewanttoanalyze,sothatnon-deterministictimeisaveryimportantresourceinanalyzingcomputationalproblems.\nForaprecisedefinitionofwhatitmeanstosolveaproblemusingagivenamountoftimeandspace,acomputationalmodelsuchasthedeterministicTuringmachineisused.ThetimerequiredbyadeterministicTuringmachineMoninputxisthetotalnumberofstatetransitions,orsteps,themachinemakesbeforeithaltsandoutputstheanswer("yes"or"no").ATuringmachineMissaidtooperatewithintimef(n),ifthetimerequiredbyMoneachinputoflengthnisatmostf(n).AdecisionproblemAcanbesolvedintimef(n)ifthereexistsaTuringmachineoperatingintimef(n)thatsolvestheproblem.Sincecomplexitytheoryisinterestedinclassifyingproblemsbasedontheirdifficulty,onedefinessetsofproblemsbasedonsomecriteria.Forinstance,thesetofproblemssolvablewithintimef(n)onadeterministicTuringmachineisthendenotedbyDTIME(f(n)).\nAnalogousdefinitionscanbemadeforspacerequirements.Althoughtimeandspacearethemostwell-knowncomplexityresources,anycomplexitymeasurecanbeviewedasacomputationalresource.ComplexitymeasuresareverygenerallydefinedbytheBlumcomplexityaxioms.Othercomplexitymeasuresusedincomplexitytheoryincludecommunicationcomplexity,circuitcomplexity,anddecisiontreecomplexity.\nThecomplexityofanalgorithmisoftenexpressedusingbigOnotation.\nThebest,worstandaveragecasecomplexityrefertothreedifferentwaysofmeasuringthetimecomplexity(oranyothercomplexitymeasure)ofdifferentinputsofthesamesize.Sincesomeinputsofsizenmaybefastertosolvethanothers,wedefinethefollowingcomplexities:\nTheorderfromcheaptocostlyis:Best,average(ofdiscreteuniformdistribution),amortized,worst.\nForexample,considerthedeterministicsortingalgorithmquicksort.Thissolvestheproblemofsortingalistofintegersthatisgivenastheinput.Theworst-caseiswhentheinputissortedorsortedinreverseorder,andthealgorithmtakestimeO(n2)forthiscase.Ifweassumethatallpossiblepermutationsoftheinputlistareequallylikely,theaveragetimetakenforsortingisO(nlogn).Thebestcaseoccurswheneachpivotingdividesthelistinhalf,alsoneedingO(nlogn)time.\nToclassifythecomputationtime(orsimilarresources,suchasspaceconsumption),oneisinterestedinprovingupperandlowerboundsonthemaximumamountoftimerequiredbythemostefficientalgorithmsolvingagivenproblem.Thecomplexityofanalgorithmisusuallytakentobeitsworst-casecomplexity,unlessspecifiedotherwise.Analyzingaparticularalgorithmfallsunderthefieldofanalysisofalgorithms.ToshowanupperboundT(n)onthetimecomplexityofaproblem,oneneedstoshowonlythatthereisaparticularalgorithmwithrunningtimeatmostT(n).However,provinglowerboundsismuchmoredifficult,sincelowerboundsmakeastatementaboutallpossiblealgorithmsthatsolveagivenproblem.Thephrase"allpossiblealgorithms"includesnotjustthealgorithmsknowntoday,butanyalgorithmthatmightbediscoveredinthefuture.ToshowalowerboundofT(n)foraproblemrequiresshowingthatnoalgorithmcanhavetimecomplexitylowerthanT(n).\nUpperandlowerboundsareusuallystatedusingthebigOnotation,whichhidesconstantfactorsandsmallerterms.Thismakestheboundsindependentofthespecificdetailsofthecomputationalmodelused.Forinstance,ifT(n) = 7n2 + 15n + 40,inbigOnotationonewouldwriteT(n) = O(n2).\nAcomplexityclassisasetofproblemsofrelatedcomplexity.Simplercomplexityclassesaredefinedbythefollowingfactors:\nSomecomplexityclasseshavecomplicateddefinitionsthatdonotfitintothisframework.Thus,atypicalcomplexityclasshasadefinitionlikethefollowing:\nButboundingthecomputationtimeabovebysomeconcretefunctionf(n)oftenyieldscomplexityclassesthatdependonthechosenmachinemodel.Forinstance,thelanguage{xx|xisanybinarystring}canbesolvedinlineartimeonamulti-tapeTuringmachine,butnecessarilyrequiresquadratictimeinthemodelofsingle-tapeTuringmachines.Ifweallowpolynomialvariationsinrunningtime,Cobham-Edmondsthesisstatesthat"thetimecomplexitiesinanytworeasonableandgeneralmodelsofcomputationarepolynomiallyrelated"(Goldreich2008,Chapter1.2).ThisformsthebasisforthecomplexityclassP,whichisthesetofdecisionproblemssolvablebyadeterministicTuringmachinewithinpolynomialtime.ThecorrespondingsetoffunctionproblemsisFP.\nManyimportantcomplexityclassescanbedefinedbyboundingthetimeorspaceusedbythealgorithm.Someimportantcomplexityclassesofdecisionproblemsdefinedinthismannerarethefollowing:\nThelogarithmic-spaceclasses(necessarily)donottakeintoaccountthespaceneededtorepresenttheproblem.\nItturnsoutthatPSPACE=NPSPACEandEXPSPACE=NEXPSPACEbySavitch\'stheorem.\nOtherimportantcomplexityclassesincludeBPP,ZPPandRP,whicharedefinedusingprobabilisticTuringmachines;ACandNC,whicharedefinedusingBooleancircuits;andBQPandQMA,whicharedefinedusingquantumTuringmachines.#Pisanimportantcomplexityclassofcountingproblems(notdecisionproblems).ClasseslikeIPandAMaredefinedusingInteractiveproofsystems.ALListheclassofalldecisionproblems.\nForthecomplexityclassesdefinedinthisway,itisdesirabletoprovethatrelaxingtherequirementson(say)computationtimeindeeddefinesabiggersetofproblems.Inparticular,althoughDTIME(n)iscontainedinDTIME(n2),itwouldbeinterestingtoknowiftheinclusionisstrict.Fortimeandspacerequirements,theanswertosuchquestionsisgivenbythetimeandspacehierarchytheoremsrespectively.Theyarecalledhierarchytheoremsbecausetheyinduceaproperhierarchyontheclassesdefinedbyconstrainingtherespectiveresources.Thustherearepairsofcomplexityclassessuchthatoneisproperlyincludedintheother.Havingdeducedsuchpropersetinclusions,wecanproceedtomakequantitativestatementsabouthowmuchmoreadditionaltimeorspaceisneededinordertoincreasethenumberofproblemsthatcanbesolved.\nMoreprecisely,thetimehierarchytheoremstatesthat\nThespacehierarchytheoremstatesthat\nThetimeandspacehierarchytheoremsformthebasisformostseparationresultsofcomplexityclasses.Forinstance,thetimehierarchytheoremtellsusthatPisstrictlycontainedinEXPTIME,andthespacehierarchytheoremtellsusthatLisstrictlycontainedinPSPACE.\nManycomplexityclassesaredefinedusingtheconceptofareduction.Areductionisatransformationofoneproblemintoanotherproblem.Itcapturestheinformalnotionofaproblembeingatmostasdifficultasanotherproblem.Forinstance,ifaproblemXcanbesolvedusinganalgorithmforY,XisnomoredifficultthanY,andwesaythatXreducestoY.Therearemanydifferenttypesofreductions,basedonthemethodofreduction,suchasCookreductions,KarpreductionsandLevinreductions,andtheboundonthecomplexityofreductions,suchaspolynomial-timereductionsorlog-spacereductions.\nThemostcommonlyusedreductionisapolynomial-timereduction.Thismeansthatthereductionprocesstakespolynomialtime.Forexample,theproblemofsquaringanintegercanbereducedtotheproblemofmultiplyingtwointegers.Thismeansanalgorithmformultiplyingtwointegerscanbeusedtosquareaninteger.Indeed,thiscanbedonebygivingthesameinputtobothinputsofthemultiplicationalgorithm.Thusweseethatsquaringisnotmoredifficultthanmultiplication,sincesquaringcanbereducedtomultiplication.\nThismotivatestheconceptofaproblembeinghardforacomplexityclass.AproblemXishardforaclassofproblemsCifeveryprobleminCcanbereducedtoX.ThusnoprobleminCisharderthanX,sinceanalgorithmforXallowsustosolveanyprobleminC.Thenotionofhardproblemsdependsonthetypeofreductionbeingused.ForcomplexityclasseslargerthanP,polynomial-timereductionsarecommonlyused.Inparticular,thesetofproblemsthatarehardforNPisthesetofNP-hardproblems.\nIfaproblemXisinCandhardforC,thenXissaidtobecompleteforC.ThismeansthatXisthehardestprobleminC.(Sincemanyproblemscouldbeequallyhard,onemightsaythatXisoneofthehardestproblemsinC.)ThustheclassofNP-completeproblemscontainsthemostdifficultproblemsinNP,inthesensethattheyaretheonesmostlikelynottobeinP.BecausetheproblemP = NPisnotsolved,beingabletoreduceaknownNP-completeproblem,\xce\xa02,toanotherproblem,\xce\xa01,wouldindicatethatthereisnoknownpolynomial-timesolutionfor\xce\xa01.Thisisbecauseapolynomial-timesolutionto\xce\xa01wouldyieldapolynomial-timesolutionto\xce\xa02.Similarly,becauseallNPproblemscanbereducedtotheset,findinganNP-completeproblemthatcanbesolvedinpolynomialtimewouldmeanthatP = NP.[3]\nThecomplexityclassPisoftenseenasamathematicalabstractionmodelingthosecomputationaltasksthatadmitanefficientalgorithm.ThishypothesisiscalledtheCobham\xe2\x80\x93Edmondsthesis.ThecomplexityclassNP,ontheotherhand,containsmanyproblemsthatpeoplewouldliketosolveefficiently,butforwhichnoefficientalgorithmisknown,suchastheBooleansatisfiabilityproblem,theHamiltonianpathproblemandthevertexcoverproblem.SincedeterministicTuringmachinesarespecialnon-deterministicTuringmachines,itiseasilyobservedthateachprobleminPisalsomemberoftheclassNP.\nThequestionofwhetherPequalsNPisoneofthemostimportantopenquestionsintheoreticalcomputersciencebecauseofthewideimplicationsofasolution.[3]Iftheanswerisyes,manyimportantproblemscanbeshowntohavemoreefficientsolutions.Theseincludevarioustypesofintegerprogrammingproblemsinoperationsresearch,manyproblemsinlogistics,proteinstructurepredictioninbiology,[5]andtheabilitytofindformalproofsofpuremathematicstheorems.[6]ThePversusNPproblemisoneoftheMillenniumPrizeProblemsproposedbytheClayMathematicsInstitute.ThereisaUS$1,000,000prizeforresolvingtheproblem.[7]\nItwasshownbyLadnerthatifP\xe2\x89\xa0NPthenthereexistproblemsinNPthatareneitherinPnorNP-complete.[4]SuchproblemsarecalledNP-intermediateproblems.Thegraphisomorphismproblem,thediscretelogarithmproblemandtheintegerfactorizationproblemareexamplesofproblemsbelievedtobeNP-intermediate.TheyaresomeoftheveryfewNPproblemsnotknowntobeinPortobeNP-complete.\nThegraphisomorphismproblemisthecomputationalproblemofdeterminingwhethertwofinitegraphsareisomorphic.AnimportantunsolvedproblemincomplexitytheoryiswhetherthegraphisomorphismproblemisinP,NP-complete,orNP-intermediate.Theanswerisnotknown,butitisbelievedthattheproblemisatleastnotNP-complete.[8]IfgraphisomorphismisNP-complete,thepolynomialtimehierarchycollapsestoitssecondlevel.[9]Sinceitiswidelybelievedthatthepolynomialhierarchydoesnotcollapsetoanyfinitelevel,itisbelievedthatgraphisomorphismisnotNP-complete.Thebestalgorithmforthisproblem,duetoL\xc3\xa1szl\xc3\xb3BabaiandEugeneLukshasruntime\n\n\n\nO\n(\n\n2\n\n\nn\nlog\n⁡\nn\n\n\n\n)\n\n\n{\\displaystyleO(2^{\\sqrt{n\\logn}})}\n\nforgraphswithnvertices,althoughsomerecentworkbyBabaiofferssomepotentiallynewperspectivesonthis.[10]\nTheintegerfactorizationproblemisthecomputationalproblemofdeterminingtheprimefactorizationofagiveninteger.Phrasedasadecisionproblem,itistheproblemofdecidingwhethertheinputhasaprimefactorlessthank.Noefficientintegerfactorizationalgorithmisknown,andthisfactformsthebasisofseveralmoderncryptographicsystems,suchastheRSAalgorithm.TheintegerfactorizationproblemisinNPandinco-NP(andeveninUPandco-UP[11]).IftheproblemisNP-complete,thepolynomialtimehierarchywillcollapsetoitsfirstlevel(i.e.,NPwillequalco-NP).Thebestknownalgorithmforintegerfactorizationisthegeneralnumberfieldsieve,whichtakestime\n\n\n\nO\n(\n\ne\n\n\n\n(\n\n\n64\n9\n\n\n)\n\n\n1\n\n/\n\n3\n\n\n(\nlog\n⁡\nn\n\n)\n\n1\n\n/\n\n3\n\n\n(\nlog\n⁡\nlog\n⁡\nn\n\n)\n\n2\n\n/\n\n3\n\n\n\n\n)\n\n\n{\\displaystyleO(e^{\\left({\\frac{64}{9}}\\right)^{1/3}(\\logn)^{1/3}(\\log\\logn)^{2/3}})}\n\n[12]tofactoranintegern.However,thebestknownquantumalgorithmforthisproblem,Shor\'salgorithm,doesruninpolynomialtime.Unfortunately,thisfactdoesn\'tsaymuchaboutwheretheproblemlieswithrespecttonon-quantumcomplexityclasses.\nManyknowncomplexityclassesaresuspectedtobeunequal,butthishasnotbeenproved.ForinstanceP\xe2\x8a\x86NP\xe2\x8a\x86PP\xe2\x8a\x86PSPACE,butitispossiblethatP=PSPACE.IfPisnotequaltoNP,thenPisnotequaltoPSPACEeither.SincetherearemanyknowncomplexityclassesbetweenPandPSPACE,suchasRP,BPP,PP,BQP,MA,PH,etc.,itispossiblethatallthesecomplexityclassescollapsetooneclass.Provingthatanyoftheseclassesareunequalwouldbeamajorbreakthroughincomplexitytheory.\nAlongthesamelines,co-NPistheclasscontainingthecomplementproblems(i.e.problemswiththeyes/noanswersreversed)ofNPproblems.Itisbelieved[13]thatNPisnotequaltoco-NP;however,ithasnotyetbeenproven.ItisclearthatifthesetwocomplexityclassesarenotequalthenPisnotequaltoNP,sinceifP=NPwewouldalsohaveP=co-NP,sinceproblemsinNParedualtothoseinco-NP.\nSimilarly,itisnotknownifL(thesetofallproblemsthatcanbesolvedinlogarithmicspace)isstrictlycontainedinPorequaltoP.Again,therearemanycomplexityclassesbetweenthetwo,suchasNLandNC,anditisnotknowniftheyaredistinctorequalclasses.\nItissuspectedthatPandBPPareequal.However,itiscurrentlyopenifBPP=NEXP.\nAproblemthatcanbesolvedintheory(e.g.givenlargebutfiniteresources,especiallytime),butforwhichinpracticeanysolutiontakestoomanyresourcestobeuseful,isknownasanintractableproblem.[14]Conversely,aproblemthatcanbesolvedinpracticeiscalledatractableproblem,literally"aproblemthatcanbehandled".Theterminfeasible(literally"cannotbedone")issometimesusedinterchangeablywithintractable,[15]thoughthisrisksconfusionwithafeasiblesolutioninmathematicaloptimization.[16]\nTractableproblemsarefrequentlyidentifiedwithproblemsthathavepolynomial-timesolutions(P,PTIME);thisisknownastheCobham\xe2\x80\x93Edmondsthesis.ProblemsthatareknowntobeintractableinthissenseincludethosethatareEXPTIME-hard.IfNPisnotthesameasP,thenNP-hardproblemsarealsointractableinthissense.\nHowever,thisidentificationisinexact:apolynomial-timesolutionwithlargeexponentorlargeconstanttermgrowsquickly,andmaybeimpracticalforpracticalsizeproblems;conversely,anexponential-timesolutionthatgrowsslowlymaybepracticalonrealisticinput,orasolutionthattakesalongtimeintheworstcasemaytakeashorttimeinmostcasesortheaveragecase,andthusstillbepractical.SayingthataproblemisnotinPdoesnotimplythatalllargecasesoftheproblemarehardoreventhatmostofthemare.Forexample,thedecisionprobleminPresburgerarithmetichasbeenshownnottobeinP,yetalgorithmshavebeenwrittenthatsolvetheprobleminreasonabletimesinmostcases.Similarly,algorithmscansolvetheNP-completeknapsackproblemoverawiderangeofsizesinlessthanquadratictimeandSATsolversroutinelyhandlelargeinstancesoftheNP-completeBooleansatisfiabilityproblem.\nToseewhyexponential-timealgorithmsaregenerallyunusableinpractice,consideraprogramthatmakes2noperationsbeforehalting.Forsmalln,say100,andassumingforthesakeofexamplethatthecomputerdoes1012operationseachsecond,theprogramwouldrunforabout4 \xc3\x97 1010years,whichisthesameorderofmagnitudeastheageoftheuniverse.Evenwithamuchfastercomputer,theprogramwouldonlybeusefulforverysmallinstancesandinthatsensetheintractabilityofaproblemissomewhatindependentoftechnologicalprogress.However,anexponential-timealgorithmthattakes1.0001noperationsispracticaluntilngetsrelativelylarge.\nSimilarly,apolynomialtimealgorithmisnotalwayspractical.Ifitsrunningtimeis,say,n15,itisunreasonabletoconsideritefficientanditisstilluselessexceptonsmallinstances.Indeed,inpracticeevenn3orn2algorithmsareoftenimpracticalonrealisticsizesofproblems.\nAnearlyexampleofalgorithmcomplexityanalysisistherunningtimeanalysisoftheEuclideanalgorithmdonebyGabrielLam\xc3\xa9in1844.\nBeforetheactualresearchexplicitlydevotedtothecomplexityofalgorithmicproblemsstartedoff,numerousfoundationswerelaidoutbyvariousresearchers.MostinfluentialamongthesewasthedefinitionofTuringmachinesbyAlanTuringin1936,whichturnedouttobeaveryrobustandflexiblesimplificationofacomputer.\nThebeginningofsystematicstudiesincomputationalcomplexityisattributedtotheseminal1965paper"OntheComputationalComplexityofAlgorithms"byJurisHartmanisandRichardE.Stearns,whichlaidoutthedefinitionsoftimecomplexityandspacecomplexity,andprovedthehierarchytheorems.[17]Inaddition,in1965Edmondssuggestedtoconsidera"good"algorithmtobeonewithrunningtimeboundedbyapolynomialoftheinputsize.[18]\nEarlierpapersstudyingproblemssolvablebyTuringmachineswithspecificboundedresourcesinclude[17]JohnMyhill\'sdefinitionoflinearboundedautomata(Myhill1960),RaymondSmullyan\'sstudyofrudimentarysets(1961),aswellasHisaoYamada\'spaper[19]onreal-timecomputations(1962).Somewhatearlier,BorisTrakhtenbrot(1956),apioneerinthefieldfromtheUSSR,studiedanotherspecificcomplexitymeasure.[20]Asheremembers:\nHowever,[my]initialinterest[inautomatatheory]wasincreasinglysetasideinfavorofcomputationalcomplexity,anexcitingfusionofcombinatorialmethods,inheritedfromswitchingtheory,withtheconceptualarsenalofthetheoryofalgorithms.Theseideashadoccurredtomeearlierin1955whenIcoinedtheterm"signalizingfunction",whichisnowadayscommonlyknownas"complexitymeasure".[21]\nIn1967,ManuelBlumformulatedasetofaxioms(nowknownasBlumaxioms)specifyingdesirablepropertiesofcomplexitymeasuresonthesetofcomputablefunctionsandprovedanimportantresult,theso-calledspeed-uptheorem.Thefieldbegantoflourishin1971whentheStephenCookandLeonidLevinprovedtheexistenceofpracticallyrelevantproblemsthatareNP-complete.In1972,RichardKarptookthisideaaleapforwardwithhislandmarkpaper,"ReducibilityAmongCombinatorialProblems",inwhichheshowedthat21diversecombinatorialandgraphtheoreticalproblems,eachinfamousforitscomputationalintractability,areNP-complete.[22]\nInthe1980s,muchworkwasdoneontheaveragedifficultyofsolvingNP-completeproblems\xe2\x80\x94bothexactlyandapproximately.Atthattime,computationalcomplexitytheorywasatitsheight,anditwaswidelybelievedthatifaproblemturnedouttobeNP-complete,thentherewaslittlechanceofbeingabletoworkwiththeprobleminapracticalsituation.However,itbecameincreasinglyclearthatthisisnotalwaysthecase,andsomeauthorsclaimedthatgeneralasymptoticresultsareoftenunimportantfortypicalproblemsarisinginpractice.[23]\n