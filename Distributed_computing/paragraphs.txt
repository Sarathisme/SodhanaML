Distributedcomputingisafieldofcomputersciencethatstudiesdistributedsystems.Adistributedsystemisasystemwhosecomponentsarelocatedondifferentnetworkedcomputers,whichthencommunicateandcoordinatetheiractionsbypassingmessagestooneanother.[1]Thecomponentsinteractwithoneanotherinordertoachieveacommongoal.Threesignificantcharacteristicsofdistributedsystemsare:concurrencyofcomponents,lackofaglobalclock,andindependentfailureofcomponents.[1]ExamplesofdistributedsystemsvaryfromSOA-basedsystemstomassivelymultiplayeronlinegamestopeer-to-peerapplications.\nAcomputerprogramthatrunswithinadistributedsystemiscalledadistributedprogram(anddistributedprogrammingistheprocessofwritingsuchprograms).[2]Therearemanydifferenttypesofimplementationsforthemessagepassingmechanism,includingpureHTTP,RPC-likeconnectorsandmessagequeues[3].\nDistributedcomputingalsoreferstotheuseofdistributedsystemstosolvecomputationalproblems.Indistributedcomputing,aproblemisdividedintomanytasks,eachofwhichissolvedbyoneormorecomputers,[4]whichcommunicatewitheachotherviamessagepassing.[5]\nThewordparallelintermssuchas"parallelsystem","distributedprogramming",and"distributedalgorithm"originallyreferredtocomputernetworkswhereindividualcomputerswerephysicallydistributedwithinsomegeographicalarea.[6]Thetermsarenowadaysusedinamuchwidersense,evenreferringtoautonomousprocessesthatrunonthesamephysicalcomputerandinteractwitheachotherbymessagepassing.[5]\nWhilethereisnosingledefinitionofadistributedsystem,[7]thefollowingdefiningpropertiesarecommonlyused:\nAdistributedsystemmayhaveacommongoal,suchassolvingalargecomputationalproblem;[10]theuserthenperceivesthecollectionofautonomousprocessorsasaunit.Alternatively,eachcomputermayhaveitsownuserwithindividualneeds,andthepurposeofthedistributedsystemistocoordinatetheuseofsharedresourcesorprovidecommunicationservicestotheusers.[11]\nOthertypicalpropertiesofdistributedsystemsincludethefollowing:\nDistributedsystemsaregroupsofnetworkedcomputers,whichhavethesamegoalfortheirwork.\nTheterms"concurrentcomputing","parallelcomputing",and"distributedcomputing"havealotofoverlap,andnocleardistinctionexistsbetweenthem.[15]Thesamesystemmaybecharacterizedbothas"parallel"and"distributed";theprocessorsinatypicaldistributedsystemrunconcurrentlyinparallel.[16]Parallelcomputingmaybeseenasaparticulartightlycoupledformofdistributedcomputing,[17]anddistributedcomputingmaybeseenasalooselycoupledformofparallelcomputing.[7]Nevertheless,itispossibletoroughlyclassifyconcurrentsystemsas"parallel"or"distributed"usingthefollowingcriteria:\nThefigureontherightillustratesthedifferencebetweendistributedandparallelsystems.Figure(a)isaschematicviewofatypicaldistributedsystem;thesystemisrepresentedasanetworktopologyinwhicheachnodeisacomputerandeachlineconnectingthenodesisacommunicationlink.Figure(b)showsthesamedistributedsysteminmoredetail:eachcomputerhasitsownlocalmemory,andinformationcanbeexchangedonlybypassingmessagesfromonenodetoanotherbyusingtheavailablecommunicationlinks.Figure(c)showsaparallelsysteminwhicheachprocessorhasadirectaccesstoasharedmemory.\nThesituationisfurthercomplicatedbythetraditionalusesofthetermsparallelanddistributedalgorithmthatdonotquitematchtheabovedefinitionsofparallelanddistributedsystems(seebelowformoredetaileddiscussion).Nevertheless,asaruleofthumb,high-performanceparallelcomputationinashared-memorymultiprocessorusesparallelalgorithmswhilethecoordinationofalarge-scaledistributedsystemusesdistributedalgorithms.[20]\nTheuseofconcurrentprocessesthatcommunicatebymessage-passinghasitsrootsinoperatingsystemarchitecturesstudiedinthe1960s.[21]Thefirstwidespreaddistributedsystemswerelocal-areanetworkssuchasEthernet,whichwasinventedinthe1970s.[22]\nARPANET,thepredecessoroftheInternet,wasintroducedinthelate1960s,andARPANETe-mailwasinventedintheearly1970s.E-mailbecamethemostsuccessfulapplicationofARPANET,[23]anditisprobablytheearliestexampleofalarge-scaledistributedapplication.InadditiontoARPANET,anditssuccessor,theInternet,otherearlyworldwidecomputernetworksincludedUsenetandFidoNetfromthe1980s,bothofwhichwereusedtosupportdistributeddiscussionsystems.[24]\nThestudyofdistributedcomputingbecameitsownbranchofcomputerscienceinthelate1970sandearly1980s.Thefirstconferenceinthefield,SymposiumonPrinciplesofDistributedComputing(PODC),datesbackto1982,anditscounterpartInternationalSymposiumonDistributedComputing(DISC)wasfirstheldinOttawain1985astheInternationalWorkshoponDistributedAlgorithmsonGraphs.[25]\nVarioushardwareandsoftwarearchitecturesareusedfordistributedcomputing.Atalowerlevel,itisnecessarytointerconnectmultipleCPUswithsomesortofnetwork,regardlessofwhetherthatnetworkisprintedontoacircuitboardormadeupoflooselycoupleddevicesandcables.Atahigherlevel,itisnecessarytointerconnectprocessesrunningonthoseCPUswithsomesortofcommunicationsystem.[26]\nDistributedprogrammingtypicallyfallsintooneofseveralbasicarchitectures:client\xe2\x80\x93server,three-tier,n-tier,orpeer-to-peer;orcategories:loosecoupling,ortightcoupling.[27]\nAnotherbasicaspectofdistributedcomputingarchitectureisthemethodofcommunicatingandcoordinatingworkamongconcurrentprocesses.Throughvariousmessagepassingprotocols,processesmaycommunicatedirectlywithoneanother,typicallyinamaster/slaverelationship.Alternatively,a"database-centric"architecturecanenabledistributedcomputingtobedonewithoutanyformofdirectinter-processcommunication,byutilizingashareddatabase.[30]\nReasonsforusingdistributedsystemsanddistributedcomputingmayinclude:\nExamplesofdistributedsystemsandapplicationsofdistributedcomputingincludethefollowing:[32]\nManytasksthatwewouldliketoautomatebyusingacomputerareofquestion\xe2\x80\x93answertype:wewouldliketoaskaquestionandthecomputershouldproduceananswer.Intheoreticalcomputerscience,suchtasksarecalledcomputationalproblems.Formally,acomputationalproblemconsistsofinstancestogetherwithasolutionforeachinstance.Instancesarequestionsthatwecanask,andsolutionsaredesiredanswerstothesequestions.\nTheoreticalcomputerscienceseekstounderstandwhichcomputationalproblemscanbesolvedbyusingacomputer(computabilitytheory)andhowefficiently(computationalcomplexitytheory).Traditionally,itissaidthataproblemcanbesolvedbyusingacomputerifwecandesignanalgorithmthatproducesacorrectsolutionforanygiveninstance.Suchanalgorithmcanbeimplementedasacomputerprogramthatrunsonageneral-purposecomputer:theprogramreadsaprobleminstancefrominput,performssomecomputation,andproducesthesolutionasoutput.FormalismssuchasrandomaccessmachinesoruniversalTuringmachinescanbeusedasabstractmodelsofasequentialgeneral-purposecomputerexecutingsuchanalgorithm.[33][34]\nThefieldofconcurrentanddistributedcomputingstudiessimilarquestionsinthecaseofeithermultiplecomputers,oracomputerthatexecutesanetworkofinteractingprocesses:whichcomputationalproblemscanbesolvedinsuchanetworkandhowefficiently?However,itisnotatallobviouswhatismeantby"solvingaproblem"inthecaseofaconcurrentordistributedsystem:forexample,whatisthetaskofthealgorithmdesigner,andwhatistheconcurrentordistributedequivalentofasequentialgeneral-purposecomputer?[citationneeded]\nThediscussionbelowfocusesonthecaseofmultiplecomputers,althoughmanyoftheissuesarethesameforconcurrentprocessesrunningonasinglecomputer.\nThreeviewpointsarecommonlyused:\nInthecaseofdistributedalgorithms,computationalproblemsaretypicallyrelatedtographs.Oftenthegraphthatdescribesthestructureofthecomputernetworkistheprobleminstance.Thisisillustratedinthefollowingexample.[citationneeded]\nConsiderthecomputationalproblemoffindingacoloringofagivengraphG.Differentfieldsmighttakethefollowingapproaches:\nWhilethefieldofparallelalgorithmshasadifferentfocusthanthefieldofdistributedalgorithms,thereisalotofinteractionbetweenthetwofields.Forexample,theCole\xe2\x80\x93Vishkinalgorithmforgraphcoloring[39]wasoriginallypresentedasaparallelalgorithm,butthesametechniquecanalsobeuseddirectlyasadistributedalgorithm.\nMoreover,aparallelalgorithmcanbeimplementedeitherinaparallelsystem(usingsharedmemory)orinadistributedsystem(usingmessagepassing).[40]Thetraditionalboundarybetweenparallelanddistributedalgorithms(chooseasuitablenetworkvs.runinanygivennetwork)doesnotlieinthesameplaceastheboundarybetweenparallelanddistributedsystems(sharedmemoryvs.messagepassing).\nInparallelalgorithms,yetanotherresourceinadditiontotimeandspaceisthenumberofcomputers.Indeed,oftenthereisatrade-offbetweentherunningtimeandthenumberofcomputers:theproblemcanbesolvedfasteriftherearemorecomputersrunninginparallel(seespeedup).Ifadecisionproblemcanbesolvedinpolylogarithmictimebyusingapolynomialnumberofprocessors,thentheproblemissaidtobeintheclassNC.[41]TheclassNCcanbedefinedequallywellbyusingthePRAMformalismorBooleancircuits\xe2\x80\x94PRAMmachinescansimulateBooleancircuitsefficientlyandviceversa.[42]\nIntheanalysisofdistributedalgorithms,moreattentionisusuallypaidoncommunicationoperationsthancomputationalsteps.Perhapsthesimplestmodelofdistributedcomputingisasynchronoussystemwhereallnodesoperateinalockstepfashion.ThismodeliscommonlyknownastheLOCALmodel.Duringeachcommunicationround,allnodesinparallel(1) receivethelatestmessagesfromtheirneighbours,(2) performarbitrarylocalcomputation,and(3) sendnewmessagestotheirneighbors.Insuchsystems,acentralcomplexitymeasureisthenumberofsynchronouscommunicationroundsrequiredtocompletethetask.[43]\nThiscomplexitymeasureiscloselyrelatedtothediameterofthenetwork.LetDbethediameterofthenetwork.Ontheonehand,anycomputableproblemcanbesolvedtriviallyinasynchronousdistributedsysteminapproximately2Dcommunicationrounds:simplygatherallinformationinonelocation(Drounds),solvetheproblem,andinformeachnodeaboutthesolution(Drounds).\nOntheotherhand,iftherunningtimeofthealgorithmismuchsmallerthanDcommunicationrounds,thenthenodesinthenetworkmustproducetheiroutputwithouthavingthepossibilitytoobtaininformationaboutdistantpartsofthenetwork.Inotherwords,thenodesmustmakegloballyconsistentdecisionsbasedoninformationthatisavailableintheirlocalD-neighbourhood.ManydistributedalgorithmsareknownwiththerunningtimemuchsmallerthanDrounds,andunderstandingwhichproblemscanbesolvedbysuchalgorithmsisoneofthecentralresearchquestionsofthefield[44].Typicallyanalgorithmwhichsolvesaprobleminpolylogarithmictimeinthenetworksizeisconsideredefficientinthismodel.\nAnothercommonlyusedmeasureisthetotalnumberofbitstransmittedinthenetwork(cf.communicationcomplexity)[45].ThefeaturesofthisconceptaretypicallycapturedwiththeCONGEST(B)model,whichsimilarlydefinedastheLOCALmodelbutwheresinglemessagescanonlycontainBbits.\nTraditionalcomputationalproblemstaketheperspectivethatweaskaquestion,acomputer(oradistributedsystem)processesthequestionforawhile,andthenproducesananswerandstops.However,therearealsoproblemswherewedonotwantthesystemtoeverstop.Examplesofsuchproblemsincludethediningphilosophersproblemandothersimilarmutualexclusionproblems.Intheseproblems,thedistributedsystemissupposedtocontinuouslycoordinatetheuseofsharedresourcessothatnoconflictsordeadlocksoccur.\nTherearealsofundamentalchallengesthatareuniquetodistributedcomputing.Thefirstexampleischallengesthatarerelatedtofault-tolerance.Examplesofrelatedproblemsincludeconsensusproblems,[46]Byzantinefaulttolerance,[47]andself-stabilisation.[48]\nAlotofresearchisalsofocusedonunderstandingtheasynchronousnatureofdistributedsystems:\nElection\nCoordinatorelection(orleaderelection)istheprocessofdesignatingasingleprocessastheorganizerofsometaskdistributedamongseveralcomputers(nodes).Beforethetaskisbegun,allnetworknodesareeitherunawarewhichnodewillserveasthe"coordinator"(orleader)ofthetask,orunabletocommunicatewiththecurrentcoordinator.Afteracoordinatorelectionalgorithmhasbeenrun,however,eachnodethroughoutthenetworkrecognizesaparticular,uniquenodeasthetaskcoordinator.[52]\nThenetworknodescommunicateamongthemselvesinordertodecidewhichofthemwillgetintothe"coordinator"state.Forthat,theyneedsomemethodinordertobreakthesymmetryamongthem.Forexample,ifeachnodehasuniqueandcomparableidentities,thenthenodescancomparetheiridentities,anddecidethatthenodewiththehighestidentityisthecoordinator.[52]\nThedefinitionofthisproblemisoftenattributedtoLeLann,whoformalizeditasamethodtocreateanewtokeninatokenringnetworkinwhichthetokenhasbeenlost.[53]\nCoordinatorelectionalgorithmsaredesignedtobeeconomicalintermsoftotalbytestransmitted,andtime.ThealgorithmsuggestedbyGallager,Humblet,andSpira[54]forgeneralundirectedgraphshashadastrongimpactonthedesignofdistributedalgorithmsingeneral,andwontheDijkstraPrizeforaninfluentialpaperindistributedcomputing.\nManyotheralgorithmsweresuggestedfordifferentkindofnetworkgraphs,suchasundirectedrings,unidirectionalrings,completegraphs,grids,directedEulergraphs,andothers.AgeneralmethodthatdecouplestheissueofthegraphfamilyfromthedesignofthecoordinatorelectionalgorithmwassuggestedbyKorach,Kutten,andMoran.[55]\nInordertoperformcoordination,distributedsystemsemploytheconceptofcoordinators.Thecoordinatorelectionproblemistochooseaprocessfromamongagroupofprocessesondifferentprocessorsinadistributedsystemtoactasthecentralcoordinator.Severalcentralcoordinatorelectionalgorithmsexist.[56]\nSofarthefocushasbeenondesigningadistributedsystemthatsolvesagivenproblem.Acomplementaryresearchproblemisstudyingthepropertiesofagivendistributedsystem.[57][58]\nThehaltingproblemisananalogousexamplefromthefieldofcentralisedcomputation:wearegivenacomputerprogramandthetaskistodecidewhetherithaltsorrunsforever.Thehaltingproblemisundecidableinthegeneralcase,andnaturallyunderstandingthebehaviourofacomputernetworkisatleastashardasunderstandingthebehaviourofonecomputer.[59]\nHowever,therearemanyinterestingspecialcasesthataredecidable.Inparticular,itispossibletoreasonaboutthebehaviourofanetworkoffinite-statemachines.Oneexampleistellingwhetheragivennetworkofinteracting(asynchronousandnon-deterministic)finite-statemachinescanreachadeadlock.ThisproblemisPSPACE-complete,[60]i.e.,itisdecidable,butitisnotlikelythatthereisanefficient(centralised,parallelordistributed)algorithmthatsolvestheprobleminthecaseoflargenetworks.\n