Applicationsecurityencompassesmeasurestakentoimprovethesecurityofanapplicationoftenbyfinding,fixingandpreventingsecurityvulnerabilities.\nDifferenttechniquesareusedtosurfacesuchsecurityvulnerabilitiesatdifferentstagesofanapplicationslifecyclesuchdesign,development,deployment,upgrade,maintenance.\nAnalwaysevolvingbutlargelyconsistentsetofcommonsecurityflawsareseenacrossdifferentapplications,seecommonflaws\nDifferenttechniqueswillfinddifferentsubsetsofthesecurityvulnerabilitieslurkinginanapplicationandaremosteffectiveatdifferenttimesinthesoftwarelifecycle.Theyeachrepresentdifferenttradeoffsoftime,effort,costandvulnerabilitiesfound.\nUtilizingthesetechniquesappropriatelythroughoutthesoftwaredevelopmentlifecycle(SDLC)tomaximizesecurityistheroleofanapplicationsecurityteam.\nAccordingtothepatterns&practicesImprovingWebApplicationSecuritybook,thefollowingareclassesofcommonapplicationsecuritythreats/attacks:\nTheOWASPcommunitypublishesalistofthetop10vulnerabilitiesforwebapplicationsandoutlinesbestsecuritypracticesfororganizationsandwhileaimingtocreateopenstandardsfortheindustry.[1]Asof2017,theorganizationliststhetopapplicationsecuritythreatsas:[2]\nTheproportionofmobiledevicesprovidingopenplatformfunctionalityisexpectedtocontinuetoincreaseinfuture.Theopennessoftheseplatformsofferssignificantopportunitiestoallpartsofthemobileeco-systembydeliveringtheabilityforflexibleprogramandservicedelivery=optionsthatmaybeinstalled,removedorrefreshedmultipletimesinlinewiththeuser\xe2\x80\x99sneedsandrequirements.However,withopennesscomesresponsibilityandunrestrictedaccesstomobileresourcesandAPIsbyapplicationsofunknownoruntrustedorigincouldresultindamagetotheuser,thedevice,thenetworkorallofthese,ifnotmanagedbysuitablesecurityarchitecturesandnetworkprecautions.ApplicationsecurityisprovidedinsomeformonmostopenOSmobiledevices(SymbianOS,[3]Microsoft,[citationneeded]BREW,etc.).In2017,GoogleexpandedtheirVulnerabilityRewardProgramtocovervulnerabilitiesfoundinapplicationsdevelopedbythirdpartiesandmadeavailablethroughtheGooglePlayStore.[4]IndustrygroupshavealsocreatedrecommendationsincludingtheGSMAssociationandOpenMobileTerminalPlatform(OMTP).[5]\nThereareseveralstrategiestoenhancemobileapplicationsecurityincluding:\nSecuritytestingtechniquesscourforvulnerabilitiesorsecurityholesinapplications.Thesevulnerabilitiesleaveapplicationsopentoexploitation.Ideally,securitytestingisimplementedthroughouttheentiresoftwaredevelopmentlifecycle(SDLC)sothatvulnerabilitiesmaybeaddressedinatimelyandthoroughmanner.Unfortunately,testingisoftenconductedasanafterthoughtattheendofthedevelopmentcycle.WiththegrowthofContinuousdeliveryandDevOpsaspopularsoftwaredevelopmentanddeploymentmodels,[6]continuoussecuritymodelsarebecomingmorepopular.[7][8]\nVulnerabilityscanners,andmorespecificallywebapplicationscanners,otherwiseknownaspenetrationtestingtools(i.e.ethicalhackingtools)havebeenhistoricallyusedbysecurityorganizationswithincorporationsandsecurityconsultantstoautomatethesecuritytestingofhttprequest/responses;however,thisisnotasubstitutefortheneedforactualsourcecodereview.Physicalcodereviewsofanapplication\'ssourcecodecanbeaccomplishedmanuallyorinanautomatedfashion.Giventhecommonsizeofindividualprograms(often500,000linesofcodeormore),thehumanbraincannotexecuteacomprehensivedataflowanalysisneededinordertocompletelycheckallcircuitouspathsofanapplicationprogramtofindvulnerabilitypoints.Thehumanbrainissuitedmoreforfiltering,interruptingandreportingtheoutputsofautomatedsourcecodeanalysistoolsavailablecommerciallyversustryingtotraceeverypossiblepaththroughacompiledcodebasetofindtherootcauselevelvulnerabilities.\nTherearemanykindsofautomatedtoolsforidentifyingvulnerabilitiesinapplications.Somerequireagreatdealofsecurityexpertisetouseandothersaredesignedforfullyautomateduse.Theresultsaredependentonthetypesofinformation(source,binary,HTTPtraffic,configuration,libraries,connections)providedtothetool,thequalityoftheanalysis,andthescopeofvulnerabilitiescovered.Commontechnologiesusedforidentifyingapplicationvulnerabilitiesinclude:\nStaticApplicationSecurityTesting(SAST)isatechnologythatisfrequentlyusedasaSourceCodeAnalysistool.Themethodanalyzessourcecodeforsecurityvulnerabilitiespriortothelaunchofanapplicationandisusedtostrengthencode.Thismethodproducesfewerfalsepositivesbutformostimplementationsrequiresaccesstoanapplication\'ssourcecode[9]andrequiresexpertconfigurationandlotsofprocessingpower.[10]\nDynamicApplicationSecurityTesting(DAST)isatechnology,whichisabletofindvisiblevulnerabilitiesbyfeedingaURLintoanautomatedscanner.Thismethodishighlyscalable,easilyintegratedandquick.DAST\'sdrawbackslieintheneedforexpertconfigurationandthehighpossibilityoffalsepositivesandnegatives.[9]\nInteractiveApplicationSecurityTesting(IAST)isasolutionthatassessesapplicationsfromwithinusingsoftwareinstrumentation.ThistechniqueallowsIASTtocombinethestrengthsofbothSASTandDASTmethodsaswellasprovidingaccesstocode,HTTPtraffic,libraryinformation,backendconnectionsandconfigurationinformation.[11]SomeIASTproductsrequiretheapplicationtobeattacked,whileotherscanbeusedduringnormalqualityassurancetesting.[12][13]\nTheadvancesinprofessionalMalwaretargetedattheInternetcustomersofonlineorganizationshaveseenachangeinWebapplicationdesignrequirementssince2007.ItisgenerallyassumedthatasizablepercentageofInternetuserswillbecompromisedthroughmalwareandthatanydatacomingfromtheirinfectedhostmaybetainted.Therefore,applicationsecurityhasbeguntomanifestmoreadvancedanti-fraudandheuristicdetectionsystemsintheback-office,ratherthanwithintheclient-sideorWebservercode.[14]Asof2016,runtimeapplicationself-protection(RASP)technologieshavebeendeveloped.[9][15]RASPisatechnologydeployedwithinoralongsidetheapplicationruntimeenvironmentthatinstrumentsanapplicationandenablesdetectionandpreventionofattacks.[16][17]\nTheCERTCoordinationCenterdescribesCoordinatedVulnerabilityDisclosure(CVD)asa\xe2\x80\x9cprocessforreducingadversaryadvantagewhileaninformationsecurityvulnerabilityisbeingmitigated.\xe2\x80\x9d[18]CVDisaniterative,multi-phaseprocessthatinvolvesmultiplestakeholders(users,vendors,securityresearchers)whomayhavedifferentprioritiesandwhomustworktogethertoresolvethevulnerability.BecauseCVDprocessesinvolvemultiplestakeholders,managingcommunicationaboutthevulnerabilityanditsresolutioniscriticaltosuccess.\nFromanoperationalperspective,manytoolsandprocessescanaidinCVD.Theseincludeemailandwebforms,bugtrackingsystemsandCoordinatedvulnerabilityplatforms.[19]\n