Aprogrammingtoolorsoftwaredevelopmenttoolisacomputerprogramthatsoftwaredevelopersusetocreate,debug,maintain,orotherwisesupportotherprogramsandapplications.Thetermusuallyreferstorelativelysimpleprograms,thatcanbecombinedtogethertoaccomplishatask,muchasonemightusemultiplehandtoolstofixaphysicalobject.Themostbasictoolsareasourcecodeeditorandacompilerorinterpreter,whichareusedubiquitouslyandcontinuously.Othertoolsareusedmoreorlessdependingonthelanguage,developmentmethodology,andindividualengineer,andareoftenusedforadiscretetask,likeadebuggerorprofiler.Toolsmaybediscreteprograms,executedseparately\xe2\x80\x93oftenfromthecommandline\xe2\x80\x93ormaybepartsofasinglelargeprogram,calledanintegrateddevelopmentenvironment(IDE).Inmanycases,particularlyforsimpleruse,simpleadhoctechniquesareusedinsteadofatool,suchasprintdebugginginsteadofusingadebugger,manualtiming(ofoverallprogramorsectionofcode)insteadofaprofiler,ortrackingbugsinatextfileorspreadsheetinsteadofabugtrackingsystem.\nThedistinctionbetweentoolsandapplicationsismurky.Forexample,developersusesimpledatabases(suchasafilecontainingalistofimportantvalues)allthetimeastools.[dubiousâ€“discuss]Howeverafull-blowndatabaseisusuallythoughtofasanapplicationorsoftwareinitsownright.Formanyyears,computer-assistedsoftwareengineering(CASE)toolsweresoughtafter.Successfultoolshaveprovenelusive.Inonesense,CASEtoolsemphasizeddesignandarchitecturesupport,suchasforUML.ButthemostsuccessfulofthesetoolsareIDEs.\nModerncomputersareverycomplexandinordertoproductivelyprogramthem,\nvariousabstractionsareneeded.Forexample,ratherthanwritingdowna\nprogram\'sbinaryrepresentationaprogrammerwillwriteaprogramina\nprogramminglanguagelikeC,JavaorPython.\nProgrammingtoolslikeassemblers,\ncompilersandlinkerstranslatea\nprogramfromahumanwriteableandreadablesourcelanguageintothebitsand\nbytesthatcanbeexecutedbyacomputer.Interpretersinterpretthe\nprogramontheflytoproducethedesiredbehaviour.\nTheseprogramsperformmanywelldefinedandrepetitivetasksthatwould\nnonethelessbetimeconsuminganderror-pronewhenperformedbyahuman,\nlikelayingoutpartsofaprograminmemoryandfixingupthereferences\nbetweenpartsofaprogramasalinkerdoes.\nOptimizingcompilersontheotherhandcanperformcomplextransformations\nonthesourcecodeinordertoimprovetheexecutionspeedor\nothercharacteristicsofaprogram.Thisallowsaprogrammertofocusmore\nonhigherlevel,conceptualaspectsofaprogramwithoutworryingaboutthedetails\nofthemachineitisrunningon.\nBecauseofthehighcomplexityofsoftware,itisnotpossibletounderstand\nmostprogramsatasingleglanceevenforthemostexperiencedsoftwaredeveloper.\nTheabstractionsprovidedbyhigh-levelprogramminglanguagesalsomakeitharder\ntounderstandtheconnectionbetweenthesourcecodewrittenbyaprogrammerand\ntheactualprogram\'sbehaviour.\nInordertofindbugsinprogramsandtopreventcreatingnewbugswhenextendingaprogram,asoftwaredeveloperusessomeprogrammingtoolstovisualizeallkindsofinformationaboutprograms.\nForexample,adebuggerallowsaprogrammertoextractinformationabouta\nrunningprogramintermsofthesourcelanguageusedtoprogramit.\nThedebuggercancomputethevalueofavariableinthesourceprogramfromthestateoftheconcretemachinebyusinginformationstoredbythecompiler.Memorydebuggerscandirectlypointoutquestionableoroutrightwrongmemoryaccessesofrunningprogramswhichmayotherwiseremainundetectedandareacommonsourceofprogramfailures.\nSoftwaretoolscomeinmanyforms:\nIntegrateddevelopmentenvironmentscombinethefeaturesofmanytoolsintoonepackage.Theyforexamplemakeiteasiertodospecifictasks,suchassearchingforcontentonlyinfilesinaparticularproject.IDEsmayforexamplebeusedfordevelopmentofenterprise-levelapplications.\nDifferentaspectsofIDEsforspecificprogramminglanguagescanbefoundinthiscomparisonofintegrateddevelopmentenvironments.\nMediarelatedtoProgrammingtoolsatWikimediaCommons\n