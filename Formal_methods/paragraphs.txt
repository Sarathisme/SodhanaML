Incomputerscience,specificallysoftwareengineeringandhardwareengineering,formalmethodsareaparticularkindofmathematicallybasedtechniqueforthespecification,developmentandverificationofsoftwareandhardwaresystems.[1]Theuseofformalmethodsforsoftwareandhardwaredesignismotivatedbytheexpectationthat,asinotherengineeringdisciplines,performingappropriatemathematicalanalysiscancontributetothereliabilityandrobustnessofadesign.[2]\nFormalmethodsarebestdescribedastheapplicationofafairlybroadvarietyoftheoreticalcomputersciencefundamentals,inparticularlogiccalculi,formallanguages,automatatheory,discreteeventdynamicsystemandprogramsemantics,butalsotypesystemsandalgebraicdatatypestoproblemsinsoftwareandhardwarespecificationandverification.[3]\nFormalmethodscanbeusedatanumberoflevels:\nLevel0:Formalspecificationmaybeundertakenandthenaprogramdevelopedfromthisinformally.Thishasbeendubbedformalmethodslite.Thismaybethemostcost-effectiveoptioninmanycases.\nLevel1:Formaldevelopmentandformalverificationmaybeusedtoproduceaprograminamoreformalmanner.Forexample,proofsofpropertiesorrefinementfromthespecificationtoaprogrammaybeundertaken.Thismaybemostappropriateinhigh-integritysystemsinvolvingsafetyorsecurity.\nLevel2:Theoremproversmaybeusedtoundertakefullyformalmachine-checkedproofs.Thiscanbeveryexpensiveandisonlypracticallyworthwhileifthecostofmistakesisextremelyhigh(e.g.,incriticalpartsofmicroprocessordesign).\nFurtherinformationonthisisexpandedbelow.\nAswithprogramminglanguagesemantics,stylesofformalmethodsmayberoughlyclassifiedasfollows:\nSomepractitionersbelievethattheformalmethodscommunityhasoveremphasizedfullformalizationofaspecificationordesign.[4][5]Theycontendthattheexpressivenessofthelanguagesinvolved,aswellasthecomplexityofthesystemsbeingmodelled,makefullformalizationadifficultandexpensivetask.Asanalternative,variouslightweightformalmethods,whichemphasizepartialspecificationandfocusedapplication,havebeenproposed.ExamplesofthislightweightapproachtoformalmethodsincludetheAlloyobjectmodellingnotation,[6]Denney\'ssynthesisofsomeaspectsoftheZnotationwithusecasedrivendevelopment,[7]andtheCSKVDMTools.[8]\nFormalmethodscanbeappliedatvariouspointsthroughthedevelopmentprocess.\nFormalmethodsmaybeusedtogiveadescriptionofthesystemtobedeveloped,atwhateverlevel(s)ofdetaildesired.Thisformaldescriptioncanbeusedtoguidefurtherdevelopmentactivities(seefollowingsections);additionally,itcanbeusedtoverifythattherequirementsforthesystembeingdevelopedhavebeencompletelyandaccuratelyspecified.\nTheneedforformalspecificationsystemshasbeennotedforyears.IntheALGOL58report,[9]JohnBackuspresentedaformalnotationfordescribingprogramminglanguagesyntax,laternamedBackusnormalformthenrenamedBackus\xe2\x80\x93Naurform(BNF).[10]BackusalsowrotethataformaldescriptionofthemeaningofsyntacticallyvalidALGOLprogramswasn\'tcompletedintimeforinclusioninthereport."Thereforetheformaltreatmentofthesemanticsoflegalprogramswillbeincludedinasubsequentpaper."Itneverappeared.\nOnceaformalspecificationhasbeenproduced,thespecificationmaybeusedasaguidewhiletheconcretesystemisdevelopedduringthedesignprocess(i.e.,realizedtypicallyinsoftware,butalsopotentiallyinhardware).Forexample:\nOnceaformalspecificationhasbeendeveloped,thespecificationmaybeusedasthebasisforprovingpropertiesofthespecification(andhopefullybyinferencethedevelopedsystem).\nSometimes,themotivationforprovingthecorrectnessofasystemisnottheobviousneedforreassuranceofthecorrectnessofthesystem,butadesiretounderstandthesystembetter.Consequently,someproofsofcorrectnessareproducedinthestyleofmathematicalproof:handwritten(ortypeset)usingnaturallanguage,usingalevelofinformalitycommontosuchproofs.A"good"proofisonewhichisreadableandunderstandablebyotherhumanreaders.\nCriticsofsuchapproachespointoutthattheambiguityinherentinnaturallanguageallowserrorstobeundetectedinsuchproofs;often,subtleerrorscanbepresentinthelow-leveldetailstypicallyoverlookedbysuchproofs.Additionally,theworkinvolvedinproducingsuchagoodproofrequiresahighlevelofmathematicalsophisticationandexpertise.\nIncontrast,thereisincreasinginterestinproducingproofsofcorrectnessofsuchsystemsbyautomatedmeans.Automatedtechniquesfallintothreegeneralcategories:\nSomeautomatedtheoremproversrequireguidanceastowhichpropertiesare"interesting"enoughtopursue,whileothersworkwithouthumanintervention.Modelcheckerscanquicklygetboggeddownincheckingmillionsofuninterestingstatesifnotgivenasufficientlyabstractmodel.\nProponentsofsuchsystemsarguethattheresultshavegreatermathematicalcertaintythanhuman-producedproofs,sinceallthetediousdetailshavebeenalgorithmicallyverified.Thetrainingrequiredtousesuchsystemsisalsolessthanthatrequiredtoproducegoodmathematicalproofsbyhand,makingthetechniquesaccessibletoawidervarietyofpractitioners.\nCriticsnotethatsomeofthosesystemsarelikeoracles:theymakeapronouncementoftruth,yetgivenoexplanationofthattruth.Thereisalsotheproblemof"verifyingtheverifier";iftheprogramwhichaidsintheverificationisitselfunproven,theremaybereasontodoubtthesoundnessoftheproducedresults.Somemodernmodelcheckingtoolsproducea"prooflog"detailingeachstepintheirproof,makingitpossibletoperform,givensuitabletools,independentverification.\nThemainfeatureoftheabstractinterpretationapproachisthatitprovidesasoundanalysis,i.e.nofalsenegativesarereturned.Moreover,itisefficientlyscalable,bytuningtheabstractdomainrepresentingthepropertytobeanalyzed,andbyapplyingwideningoperators[11]togetfastconvergence.\nFormalmethodsareappliedindifferentareasofhardwareandsoftware,includingrouters,Ethernetswitches,routingprotocols,andsecurityapplications.ThereareseveralexamplesinwhichtheyhavebeenusedtoverifythefunctionalityofthehardwareandsoftwareusedinDCs[clarificationneeded].IBMusedACL2,atheoremprover,inAMDx86processordevelopmentprocess[citationneeded].Intelusessuchmethodstoverifyitshardwareandfirmware(permanentsoftwareprogrammedintoaread-onlymemory)[citationneeded].DanskDatamatikCenterusedformalmethodsinthe1980stodevelopacompilersystemfortheAdaprogramminglanguagethatwentontobecomealong-livedcommercialproduct.[12][13]\nThereareseveralotherprojectsofNASAinwhichformalmethodsareapplied,suchasNextGenerationAirTransportationSystem[citationneeded],UnmannedAircraftSystemintegrationinNationalAirspaceSystem,[14]andAirborneCoordinatedConflictResolutionandDetection(ACCoRD).[15]\nB-MethodwithAtelierB,[16]isusedtodevelopsafetyautomatismsforthevarioussubwaysinstalledthroughouttheworldbyAlstomandSiemens,andalsoforCommonCriteriacertificationandthedevelopmentofsystemmodelsbyATMELandSTMicroelectronics.\nFormalverificationhasbeenfrequentlyusedinhardwarebymostofthewell-knownhardwarevendors,suchasIBM,Intel,andAMD.Therearemanyareasofhardware,whereIntelhaveusedFMstoverifytheworkingoftheproducts,suchasparameterizedverificationofcachecoherentprotocol,[17]IntelCorei7processorexecutionenginevalidation[18](usingtheoremproving,BDDs,andsymbolicevaluation),optimizationforIntelIA-64architectureusingHOLlighttheoremprover,[19]andverificationofhighperformancedual-portgigabitEthernetcontrollerwithasupportforPCIexpressprotocolandInteladvancemanagementtechnologyusingCadence.[20]Similarly,IBMhasusedformalmethodsintheverificationofpowergates,[21]registers,[22]andfunctionalverificationoftheIBMPower7microprocessor.[23]\nInsoftwaredevelopment,formalmethodsaremathematicalapproachestosolvingsoftware(andhardware)problemsattherequirements,specification,anddesignlevels.Formalmethodsaremostlikelytobeappliedtosafety-criticalorsecurity-criticalsoftwareandsystems,suchasavionicssoftware.Softwaresafetyassurancestandards,suchasDO-178B,DO-178C,andCommonCriteriademandformalmethodsatthehighestlevelsofcategorization.\nForsequentialsoftware,examplesofformalmethodsincludetheB-Method,thespecificationlanguagesusedinautomatedtheoremproving,RAISE,andtheZnotation.\nInfunctionalprogramming,property-basedtestinghasallowedthemathematicalspecificationandtesting(ifnotexhaustivetesting)oftheexpectedbehaviourofindividualfunctions.\nTheObjectConstraintLanguage(andspecializationssuchasJavaModelingLanguage)hasallowedobject-orientedsystemstobeformallyspecified,ifnotnecessarilyformallyverified.\nForconcurrentsoftwareandsystems,Petrinets,processalgebra,andfinitestatemachines(whicharebasedonautomatatheory-seealsovirtualfinitestatemachineoreventdrivenfinitestatemachine)allowexecutablesoftwarespecificationandcanbeusedtobuildupandvalidateapplicationbehavior.\nAnotherapproachtoformalmethodsinsoftwaredevelopmentistowriteaspecificationinsomeformoflogic—usuallyavariationoffirst-orderlogic(FOL)—andthentodirectlyexecutethelogicasthoughitwereaprogram.TheOWLlanguage,basedonDescriptionLogic(DL),isanexample.ThereisalsoworkonmappingsomeversionofEnglish(oranothernaturallanguage)automaticallytoandfromlogic,andexecutingthelogicdirectly.ExamplesareAttemptoControlledEnglish,andInternetBusinessLogic,whichdonotseektocontrolthevocabularyorsyntax.AfeatureofsystemsthatsupportbidirectionalEnglish-logicmappinganddirectexecutionofthelogicisthattheycanbemadetoexplaintheirresults,inEnglish,atthebusinessorscientificlevel.[citationneeded]\nThereareavarietyofformalmethodsandnotationsavailable.\nThisarticleisbasedonmaterialtakenfromtheFreeOn-lineDictionaryofComputingpriorto1November2008andincorporatedunderthe"relicensing"termsoftheGFDL,version1.3orlater.\n