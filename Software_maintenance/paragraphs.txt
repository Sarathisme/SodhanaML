Softwaremaintenanceinsoftwareengineeringisthemodificationofasoftwareproductafterdeliverytocorrectfaults,toimproveperformanceorotherattributes.[1]\nAcommonperceptionofmaintenanceisthatitmerelyinvolvesfixingdefects.However,onestudyindicatedthatover80%ofmaintenanceeffortisusedfornon-correctiveactions.[2]Thisperceptionisperpetuatedbyuserssubmittingproblemreportsthatinrealityarefunctionalityenhancementstothesystem.[citationneeded]Morerecentstudiesputthebug-fixingproportioncloserto21%.[3]\nSoftwaremaintenanceandevolutionofsystemswasfirstaddressedbyMeirM.Lehmanin1969.Overaperiodoftwentyyears,hisresearchledtotheformulationofLehman\'sLaws(Lehman1997).Keyfindingsofhisresearchincludethatmaintenanceisreallyevolutionarydevelopmentandthatmaintenancedecisionsareaidedbyunderstandingwhathappenstosystems(andsoftware)overtime.Lehmandemonstratedthatsystemscontinuetoevolveovertime.Astheyevolve,theygrowmorecomplexunlesssomeactionsuchascoderefactoringistakentoreducethecomplexity.\nInthelate1970s,afamousandwidelycitedsurveystudybyLientzandSwanson,exposedtheveryhighfractionoflife-cyclecoststhatwerebeingexpendedonmaintenance.Theycategorizedmaintenanceactivitiesintofourclasses:\nThesurveyshowedthataround75%ofthemaintenanceeffortwasonthefirsttwotypes,anderrorcorrectionconsumedabout21%.Manysubsequentstudiessuggestasimilarmagnitudeoftheproblem.Studiesshowthatcontributionofenduseriscrucialduringthenewrequirementdatagatheringandanalysis.Andthisisthemaincauseofanyproblemduringsoftwareevolutionandmaintenance.Sosoftwaremaintenanceisimportantbecauseitconsumesalargepartoftheoveralllifecyclecostsandalsotheinabilitytochangesoftwarequicklyandreliablymeansthatbusinessopportunitiesarelost.\n[5]\n[6]\n[7]\nThekeysoftwaremaintenanceissuesarebothmanagerialandtechnical.Keymanagementissuesare:alignmentwithcustomerpriorities,staffing,whichorganizationdoesmaintenance,estimatingcosts.Keytechnicalissuesare:limitedunderstanding,impactanalysis,testing,maintainabilitymeasurement.\nSoftwaremaintenanceisaverybroadactivitythatincludeserrorcorrection,enhancementsofcapabilities,deletionofobsoletecapabilities,andoptimization.Becausechangeisinevitable,mechanismsmustbedevelopedforevaluation,controllingandmakingmodifications.\nSoanyworkdonetochangethesoftwareafteritisinoperationisconsideredtobemaintenancework.\nThepurposeistopreservethevalueofsoftwareoverthetime.Thevaluecanbeenhancedbyexpandingthecustomerbase,meetingadditionalrequirements,becomingeasiertouse,moreefficientandemployingnewertechnology.Maintenancemayspanfor20years,[citationneeded]whereasdevelopmentmaybe1\xe2\x80\x932years.[citationneeded]\nAnintegralpartofsoftwareisthemaintenanceone,whichrequiresanaccuratemaintenanceplantobepreparedduringthesoftwaredevelopment.Itshouldspecifyhowuserswillrequestmodificationsorreportproblems.Thebudgetshouldincluderesourceandcostestimates.Anewdecisionshouldbeaddressedforthedevelopingofeverynewsystemfeatureanditsqualityobjectives.Thesoftwaremaintenance,whichcanlastfor5\xe2\x80\x936years(orevendecades)afterthedevelopmentprocess,callsforaneffectiveplanwhichcanaddressthescopeofsoftwaremaintenance,thetailoringofthepostdelivery/deploymentprocess,thedesignationofwhowillprovidemaintenance,andanestimateofthelife-cyclecosts.Theselectionofproperenforcementofstandardsisthechallengingtaskrightfromearlystageofsoftwareengineeringwhichhasnotgotdefiniteimportancebytheconcernedstakeholders.\nThissectiondescribesthesixsoftwaremaintenanceprocessesas:\nThereareanumberofprocesses,activitiesandpracticesthatareuniquetomaintainers,forexample:\nE.B.Swansoninitiallyidentifiedthreecategoriesofmaintenance:corrective,adaptive,andperfective.[8]TheIEEE1219standardwassupersededinJune2010byP14764.[9]\nThesehavesincebeenupdatedandISO/IEC14764presents:\nThereisalsoanotionofpre-delivery/pre-releasemaintenancewhichisallthegoodthingsyoudotolowerthetotalcostofownershipofthesoftware.Thingslikecompliancewithcodingstandardsthatincludessoftwaremaintainabilitygoals.Themanagementofcouplingandcohesionofthesoftware.Theattainmentofsoftwaresupportabilitygoals(SAEJA1004,JA1005andJA1006forexample).Notealsothatsomeacademicinstitutions[who?]arecarryingoutresearchtoquantifythecosttoongoingsoftwaremaintenanceduetothelackofresourcessuchasdesigndocumentsandsystem/softwarecomprehensiontrainingandresources(multiplycostsbyapprox.1.5-2.0wherethereisnodesigndataavailable).\nImpactofkeyadjustmentfactorsonmaintenance(sortedinorderofmaximumpositiveimpact)\nNotonlyareerror-pronemodulestroublesome,butmanyotherfactorscandegradeperformancetoo.Forexample,verycomplex\xe2\x80\x9cspaghetticode\xe2\x80\x9disquitedifficulttomaintainsafely.\nAverycommonsituationwhichoftendegradesperformanceislackofsuitablemaintenancetools,suchasdefecttrackingsoftware,changemanagementsoftware,andtestlibrarysoftware.Belowdescribesomeofthefactorsandtherangeofimpactonsoftwaremaintenance.\nImpactofkeyadjustmentfactorsonmaintenance(sortedinorderofmaximumnegativeimpact)\n[10]\n[11]\n